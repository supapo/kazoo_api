/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Validator for the set_variables callflow data object
    /// </summary>
    [DataContract]
    public partial class CallflowsSetVariables :  IEquatable<CallflowsSetVariables>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CallflowsSetVariables" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CallflowsSetVariables() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CallflowsSetVariables" /> class.
        /// </summary>
        /// <param name="customApplicationVars">Key-value pairs to set as custom_application_vars on the channel (required).</param>
        /// <param name="export">When true the provided custom_application_vars are set on the channel and any channel bridged to it later.</param>
        /// <param name="skipModule">When set to true this callflow action is skipped, advancing to the wildcard branch (if any).</param>
        public CallflowsSetVariables(Object customApplicationVars = default(Object), bool? export = default(bool?), bool? skipModule = default(bool?))
        {
            // to ensure "customApplicationVars" is required (not null)
            if (customApplicationVars == null)
            {
                throw new InvalidDataException("customApplicationVars is a required property for CallflowsSetVariables and cannot be null");
            }
            else
            {
                this.CustomApplicationVars = customApplicationVars;
            }
            this.Export = export;
            this.SkipModule = skipModule;
        }
        
        /// <summary>
        /// Key-value pairs to set as custom_application_vars on the channel
        /// </summary>
        /// <value>Key-value pairs to set as custom_application_vars on the channel</value>
        [DataMember(Name="custom_application_vars", EmitDefaultValue=false)]
        public Object CustomApplicationVars { get; set; }

        /// <summary>
        /// When true the provided custom_application_vars are set on the channel and any channel bridged to it later
        /// </summary>
        /// <value>When true the provided custom_application_vars are set on the channel and any channel bridged to it later</value>
        [DataMember(Name="export", EmitDefaultValue=false)]
        public bool? Export { get; set; }

        /// <summary>
        /// When set to true this callflow action is skipped, advancing to the wildcard branch (if any)
        /// </summary>
        /// <value>When set to true this callflow action is skipped, advancing to the wildcard branch (if any)</value>
        [DataMember(Name="skip_module", EmitDefaultValue=false)]
        public bool? SkipModule { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CallflowsSetVariables {\n");
            sb.Append("  CustomApplicationVars: ").Append(CustomApplicationVars).Append("\n");
            sb.Append("  Export: ").Append(Export).Append("\n");
            sb.Append("  SkipModule: ").Append(SkipModule).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CallflowsSetVariables);
        }

        /// <summary>
        /// Returns true if CallflowsSetVariables instances are equal
        /// </summary>
        /// <param name="input">Instance of CallflowsSetVariables to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CallflowsSetVariables input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CustomApplicationVars == input.CustomApplicationVars ||
                    (this.CustomApplicationVars != null &&
                    this.CustomApplicationVars.Equals(input.CustomApplicationVars))
                ) && 
                (
                    this.Export == input.Export ||
                    (this.Export != null &&
                    this.Export.Equals(input.Export))
                ) && 
                (
                    this.SkipModule == input.SkipModule ||
                    (this.SkipModule != null &&
                    this.SkipModule.Equals(input.SkipModule))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CustomApplicationVars != null)
                    hashCode = hashCode * 59 + this.CustomApplicationVars.GetHashCode();
                if (this.Export != null)
                    hashCode = hashCode * 59 + this.Export.GetHashCode();
                if (this.SkipModule != null)
                    hashCode = hashCode * 59 + this.SkipModule.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
