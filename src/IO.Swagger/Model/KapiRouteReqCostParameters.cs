/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// KapiRouteReqCostParameters
    /// </summary>
    [DataContract]
    public partial class KapiRouteReqCostParameters :  IEquatable<KapiRouteReqCostParameters>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KapiRouteReqCostParameters" /> class.
        /// </summary>
        /// <param name="maxIncrementalCost">maxIncrementalCost.</param>
        /// <param name="maxSetupCost">maxSetupCost.</param>
        /// <param name="minIncrementCost">minIncrementCost.</param>
        /// <param name="minSetupCost">minSetupCost.</param>
        public KapiRouteReqCostParameters(int? maxIncrementalCost = default(int?), int? maxSetupCost = default(int?), int? minIncrementCost = default(int?), int? minSetupCost = default(int?))
        {
            this.MaxIncrementalCost = maxIncrementalCost;
            this.MaxSetupCost = maxSetupCost;
            this.MinIncrementCost = minIncrementCost;
            this.MinSetupCost = minSetupCost;
        }
        
        /// <summary>
        /// Gets or Sets MaxIncrementalCost
        /// </summary>
        [DataMember(Name="Max-Incremental-Cost", EmitDefaultValue=false)]
        public int? MaxIncrementalCost { get; set; }

        /// <summary>
        /// Gets or Sets MaxSetupCost
        /// </summary>
        [DataMember(Name="Max-Setup-Cost", EmitDefaultValue=false)]
        public int? MaxSetupCost { get; set; }

        /// <summary>
        /// Gets or Sets MinIncrementCost
        /// </summary>
        [DataMember(Name="Min-Increment-Cost", EmitDefaultValue=false)]
        public int? MinIncrementCost { get; set; }

        /// <summary>
        /// Gets or Sets MinSetupCost
        /// </summary>
        [DataMember(Name="Min-Setup-Cost", EmitDefaultValue=false)]
        public int? MinSetupCost { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class KapiRouteReqCostParameters {\n");
            sb.Append("  MaxIncrementalCost: ").Append(MaxIncrementalCost).Append("\n");
            sb.Append("  MaxSetupCost: ").Append(MaxSetupCost).Append("\n");
            sb.Append("  MinIncrementCost: ").Append(MinIncrementCost).Append("\n");
            sb.Append("  MinSetupCost: ").Append(MinSetupCost).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KapiRouteReqCostParameters);
        }

        /// <summary>
        /// Returns true if KapiRouteReqCostParameters instances are equal
        /// </summary>
        /// <param name="input">Instance of KapiRouteReqCostParameters to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KapiRouteReqCostParameters input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MaxIncrementalCost == input.MaxIncrementalCost ||
                    (this.MaxIncrementalCost != null &&
                    this.MaxIncrementalCost.Equals(input.MaxIncrementalCost))
                ) && 
                (
                    this.MaxSetupCost == input.MaxSetupCost ||
                    (this.MaxSetupCost != null &&
                    this.MaxSetupCost.Equals(input.MaxSetupCost))
                ) && 
                (
                    this.MinIncrementCost == input.MinIncrementCost ||
                    (this.MinIncrementCost != null &&
                    this.MinIncrementCost.Equals(input.MinIncrementCost))
                ) && 
                (
                    this.MinSetupCost == input.MinSetupCost ||
                    (this.MinSetupCost != null &&
                    this.MinSetupCost.Equals(input.MinSetupCost))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MaxIncrementalCost != null)
                    hashCode = hashCode * 59 + this.MaxIncrementalCost.GetHashCode();
                if (this.MaxSetupCost != null)
                    hashCode = hashCode * 59 + this.MaxSetupCost.GetHashCode();
                if (this.MinIncrementCost != null)
                    hashCode = hashCode * 59 + this.MinIncrementCost.GetHashCode();
                if (this.MinSetupCost != null)
                    hashCode = hashCode * 59 + this.MinSetupCost.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
