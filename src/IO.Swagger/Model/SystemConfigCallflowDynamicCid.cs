/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Schema for callflow.dynamic_cid system_config
    /// </summary>
    [DataContract]
    public partial class SystemConfigCallflowDynamicCid :  IEquatable<SystemConfigCallflowDynamicCid>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemConfigCallflowDynamicCid" /> class.
        /// </summary>
        /// <param name="acceptPrompt">callflow.dynamic_cid accept prompt (default to &quot;tone_stream://%(250,50,440)&quot;).</param>
        /// <param name="defaultPrompt">callflow.dynamic_cid default prompt (default to &quot;dynamic-cid-enter_cid&quot;).</param>
        /// <param name="maxDigits">callflow.dynamic_cid max digits.</param>
        /// <param name="minDigits">callflow.dynamic_cid min digits.</param>
        /// <param name="rejectPrompt">callflow.dynamic_cid reject prompt (default to &quot;dynamic-cid-invalid_using_default&quot;).</param>
        /// <param name="whitelistRegex">callflow.dynamic_cid whitelist regex (default to &quot;\d+&quot;).</param>
        public SystemConfigCallflowDynamicCid(string acceptPrompt = "tone_stream://%(250,50,440)", string defaultPrompt = "dynamic-cid-enter_cid", int? maxDigits = default(int?), int? minDigits = default(int?), string rejectPrompt = "dynamic-cid-invalid_using_default", string whitelistRegex = "\d+")
        {
            // use default value if no "acceptPrompt" provided
            if (acceptPrompt == null)
            {
                this.AcceptPrompt = "tone_stream://%(250,50,440)";
            }
            else
            {
                this.AcceptPrompt = acceptPrompt;
            }
            // use default value if no "defaultPrompt" provided
            if (defaultPrompt == null)
            {
                this.DefaultPrompt = "dynamic-cid-enter_cid";
            }
            else
            {
                this.DefaultPrompt = defaultPrompt;
            }
            this.MaxDigits = maxDigits;
            this.MinDigits = minDigits;
            // use default value if no "rejectPrompt" provided
            if (rejectPrompt == null)
            {
                this.RejectPrompt = "dynamic-cid-invalid_using_default";
            }
            else
            {
                this.RejectPrompt = rejectPrompt;
            }
            // use default value if no "whitelistRegex" provided
            if (whitelistRegex == null)
            {
                this.WhitelistRegex = "\d+";
            }
            else
            {
                this.WhitelistRegex = whitelistRegex;
            }
        }
        
        /// <summary>
        /// callflow.dynamic_cid accept prompt
        /// </summary>
        /// <value>callflow.dynamic_cid accept prompt</value>
        [DataMember(Name="accept_prompt", EmitDefaultValue=false)]
        public string AcceptPrompt { get; set; }

        /// <summary>
        /// callflow.dynamic_cid default prompt
        /// </summary>
        /// <value>callflow.dynamic_cid default prompt</value>
        [DataMember(Name="default_prompt", EmitDefaultValue=false)]
        public string DefaultPrompt { get; set; }

        /// <summary>
        /// callflow.dynamic_cid max digits
        /// </summary>
        /// <value>callflow.dynamic_cid max digits</value>
        [DataMember(Name="max_digits", EmitDefaultValue=false)]
        public int? MaxDigits { get; set; }

        /// <summary>
        /// callflow.dynamic_cid min digits
        /// </summary>
        /// <value>callflow.dynamic_cid min digits</value>
        [DataMember(Name="min_digits", EmitDefaultValue=false)]
        public int? MinDigits { get; set; }

        /// <summary>
        /// callflow.dynamic_cid reject prompt
        /// </summary>
        /// <value>callflow.dynamic_cid reject prompt</value>
        [DataMember(Name="reject_prompt", EmitDefaultValue=false)]
        public string RejectPrompt { get; set; }

        /// <summary>
        /// callflow.dynamic_cid whitelist regex
        /// </summary>
        /// <value>callflow.dynamic_cid whitelist regex</value>
        [DataMember(Name="whitelist_regex", EmitDefaultValue=false)]
        public string WhitelistRegex { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SystemConfigCallflowDynamicCid {\n");
            sb.Append("  AcceptPrompt: ").Append(AcceptPrompt).Append("\n");
            sb.Append("  DefaultPrompt: ").Append(DefaultPrompt).Append("\n");
            sb.Append("  MaxDigits: ").Append(MaxDigits).Append("\n");
            sb.Append("  MinDigits: ").Append(MinDigits).Append("\n");
            sb.Append("  RejectPrompt: ").Append(RejectPrompt).Append("\n");
            sb.Append("  WhitelistRegex: ").Append(WhitelistRegex).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SystemConfigCallflowDynamicCid);
        }

        /// <summary>
        /// Returns true if SystemConfigCallflowDynamicCid instances are equal
        /// </summary>
        /// <param name="input">Instance of SystemConfigCallflowDynamicCid to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SystemConfigCallflowDynamicCid input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AcceptPrompt == input.AcceptPrompt ||
                    (this.AcceptPrompt != null &&
                    this.AcceptPrompt.Equals(input.AcceptPrompt))
                ) && 
                (
                    this.DefaultPrompt == input.DefaultPrompt ||
                    (this.DefaultPrompt != null &&
                    this.DefaultPrompt.Equals(input.DefaultPrompt))
                ) && 
                (
                    this.MaxDigits == input.MaxDigits ||
                    (this.MaxDigits != null &&
                    this.MaxDigits.Equals(input.MaxDigits))
                ) && 
                (
                    this.MinDigits == input.MinDigits ||
                    (this.MinDigits != null &&
                    this.MinDigits.Equals(input.MinDigits))
                ) && 
                (
                    this.RejectPrompt == input.RejectPrompt ||
                    (this.RejectPrompt != null &&
                    this.RejectPrompt.Equals(input.RejectPrompt))
                ) && 
                (
                    this.WhitelistRegex == input.WhitelistRegex ||
                    (this.WhitelistRegex != null &&
                    this.WhitelistRegex.Equals(input.WhitelistRegex))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AcceptPrompt != null)
                    hashCode = hashCode * 59 + this.AcceptPrompt.GetHashCode();
                if (this.DefaultPrompt != null)
                    hashCode = hashCode * 59 + this.DefaultPrompt.GetHashCode();
                if (this.MaxDigits != null)
                    hashCode = hashCode * 59 + this.MaxDigits.GetHashCode();
                if (this.MinDigits != null)
                    hashCode = hashCode * 59 + this.MinDigits.GetHashCode();
                if (this.RejectPrompt != null)
                    hashCode = hashCode * 59 + this.RejectPrompt.GetHashCode();
                if (this.WhitelistRegex != null)
                    hashCode = hashCode * 59 + this.WhitelistRegex.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
