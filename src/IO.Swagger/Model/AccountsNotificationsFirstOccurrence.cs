/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// send emails on these account-firsts
    /// </summary>
    [DataContract]
    public partial class AccountsNotificationsFirstOccurrence :  IEquatable<AccountsNotificationsFirstOccurrence>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountsNotificationsFirstOccurrence" /> class.
        /// </summary>
        /// <param name="sentInitialCall">has the account made their first call (default to false).</param>
        /// <param name="sentInitialRegistration">has the account registered their first device (default to false).</param>
        public AccountsNotificationsFirstOccurrence(bool? sentInitialCall = false, bool? sentInitialRegistration = false)
        {
            // use default value if no "sentInitialCall" provided
            if (sentInitialCall == null)
            {
                this.SentInitialCall = false;
            }
            else
            {
                this.SentInitialCall = sentInitialCall;
            }
            // use default value if no "sentInitialRegistration" provided
            if (sentInitialRegistration == null)
            {
                this.SentInitialRegistration = false;
            }
            else
            {
                this.SentInitialRegistration = sentInitialRegistration;
            }
        }
        
        /// <summary>
        /// has the account made their first call
        /// </summary>
        /// <value>has the account made their first call</value>
        [DataMember(Name="sent_initial_call", EmitDefaultValue=false)]
        public bool? SentInitialCall { get; set; }

        /// <summary>
        /// has the account registered their first device
        /// </summary>
        /// <value>has the account registered their first device</value>
        [DataMember(Name="sent_initial_registration", EmitDefaultValue=false)]
        public bool? SentInitialRegistration { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AccountsNotificationsFirstOccurrence {\n");
            sb.Append("  SentInitialCall: ").Append(SentInitialCall).Append("\n");
            sb.Append("  SentInitialRegistration: ").Append(SentInitialRegistration).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AccountsNotificationsFirstOccurrence);
        }

        /// <summary>
        /// Returns true if AccountsNotificationsFirstOccurrence instances are equal
        /// </summary>
        /// <param name="input">Instance of AccountsNotificationsFirstOccurrence to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AccountsNotificationsFirstOccurrence input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SentInitialCall == input.SentInitialCall ||
                    (this.SentInitialCall != null &&
                    this.SentInitialCall.Equals(input.SentInitialCall))
                ) && 
                (
                    this.SentInitialRegistration == input.SentInitialRegistration ||
                    (this.SentInitialRegistration != null &&
                    this.SentInitialRegistration.Equals(input.SentInitialRegistration))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SentInitialCall != null)
                    hashCode = hashCode * 59 + this.SentInitialCall.GetHashCode();
                if (this.SentInitialRegistration != null)
                    hashCode = hashCode * 59 + this.SentInitialRegistration.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
