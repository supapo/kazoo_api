/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Schema for sms_command system_config
    /// </summary>
    [DataContract]
    public partial class SystemConfigSmsCommand :  IEquatable<SystemConfigSmsCommand>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemConfigSmsCommand" /> class.
        /// </summary>
        /// <param name="applicationTimeout">sms_command application timeout.</param>
        /// <param name="collectTimeout">sms_command collect timeout.</param>
        /// <param name="messageTimeout">sms_command message timeout.</param>
        public SystemConfigSmsCommand(int? applicationTimeout = default(int?), int? collectTimeout = default(int?), int? messageTimeout = default(int?))
        {
            this.ApplicationTimeout = applicationTimeout;
            this.CollectTimeout = collectTimeout;
            this.MessageTimeout = messageTimeout;
        }
        
        /// <summary>
        /// sms_command application timeout
        /// </summary>
        /// <value>sms_command application timeout</value>
        [DataMember(Name="application_timeout", EmitDefaultValue=false)]
        public int? ApplicationTimeout { get; set; }

        /// <summary>
        /// sms_command collect timeout
        /// </summary>
        /// <value>sms_command collect timeout</value>
        [DataMember(Name="collect_timeout", EmitDefaultValue=false)]
        public int? CollectTimeout { get; set; }

        /// <summary>
        /// sms_command message timeout
        /// </summary>
        /// <value>sms_command message timeout</value>
        [DataMember(Name="message_timeout", EmitDefaultValue=false)]
        public int? MessageTimeout { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SystemConfigSmsCommand {\n");
            sb.Append("  ApplicationTimeout: ").Append(ApplicationTimeout).Append("\n");
            sb.Append("  CollectTimeout: ").Append(CollectTimeout).Append("\n");
            sb.Append("  MessageTimeout: ").Append(MessageTimeout).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SystemConfigSmsCommand);
        }

        /// <summary>
        /// Returns true if SystemConfigSmsCommand instances are equal
        /// </summary>
        /// <param name="input">Instance of SystemConfigSmsCommand to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SystemConfigSmsCommand input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ApplicationTimeout == input.ApplicationTimeout ||
                    (this.ApplicationTimeout != null &&
                    this.ApplicationTimeout.Equals(input.ApplicationTimeout))
                ) && 
                (
                    this.CollectTimeout == input.CollectTimeout ||
                    (this.CollectTimeout != null &&
                    this.CollectTimeout.Equals(input.CollectTimeout))
                ) && 
                (
                    this.MessageTimeout == input.MessageTimeout ||
                    (this.MessageTimeout != null &&
                    this.MessageTimeout.Equals(input.MessageTimeout))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ApplicationTimeout != null)
                    hashCode = hashCode * 59 + this.ApplicationTimeout.GetHashCode();
                if (this.CollectTimeout != null)
                    hashCode = hashCode * 59 + this.CollectTimeout.GetHashCode();
                if (this.MessageTimeout != null)
                    hashCode = hashCode * 59 + this.MessageTimeout.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
