/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// StorageConnectionCouchdbSettings
    /// </summary>
    [DataContract]
    public partial class StorageConnectionCouchdbSettings :  IEquatable<StorageConnectionCouchdbSettings>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StorageConnectionCouchdbSettings" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected StorageConnectionCouchdbSettings() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="StorageConnectionCouchdbSettings" /> class.
        /// </summary>
        /// <param name="connectOptions">connectOptions.</param>
        /// <param name="connectTimeout">connectTimeout.</param>
        /// <param name="credentials">credentials.</param>
        /// <param name="ip">ip (required).</param>
        /// <param name="maxPipelineSize">maxPipelineSize.</param>
        /// <param name="maxSessions">maxSessions.</param>
        /// <param name="pool">pool.</param>
        /// <param name="port">port (required).</param>
        public StorageConnectionCouchdbSettings(StorageConnectionCouchdbSettingsConnectOptions connectOptions = default(StorageConnectionCouchdbSettingsConnectOptions), int? connectTimeout = default(int?), StorageConnectionCouchdbSettingsCredentials credentials = default(StorageConnectionCouchdbSettingsCredentials), string ip = default(string), int? maxPipelineSize = default(int?), int? maxSessions = default(int?), StorageConnectionCouchdbSettingsPool pool = default(StorageConnectionCouchdbSettingsPool), int? port = default(int?))
        {
            // to ensure "ip" is required (not null)
            if (ip == null)
            {
                throw new InvalidDataException("ip is a required property for StorageConnectionCouchdbSettings and cannot be null");
            }
            else
            {
                this.Ip = ip;
            }
            // to ensure "port" is required (not null)
            if (port == null)
            {
                throw new InvalidDataException("port is a required property for StorageConnectionCouchdbSettings and cannot be null");
            }
            else
            {
                this.Port = port;
            }
            this.ConnectOptions = connectOptions;
            this.ConnectTimeout = connectTimeout;
            this.Credentials = credentials;
            this.MaxPipelineSize = maxPipelineSize;
            this.MaxSessions = maxSessions;
            this.Pool = pool;
        }
        
        /// <summary>
        /// Gets or Sets ConnectOptions
        /// </summary>
        [DataMember(Name="connect_options", EmitDefaultValue=false)]
        public StorageConnectionCouchdbSettingsConnectOptions ConnectOptions { get; set; }

        /// <summary>
        /// Gets or Sets ConnectTimeout
        /// </summary>
        [DataMember(Name="connect_timeout", EmitDefaultValue=false)]
        public int? ConnectTimeout { get; set; }

        /// <summary>
        /// Gets or Sets Credentials
        /// </summary>
        [DataMember(Name="credentials", EmitDefaultValue=false)]
        public StorageConnectionCouchdbSettingsCredentials Credentials { get; set; }

        /// <summary>
        /// Gets or Sets Ip
        /// </summary>
        [DataMember(Name="ip", EmitDefaultValue=false)]
        public string Ip { get; set; }

        /// <summary>
        /// Gets or Sets MaxPipelineSize
        /// </summary>
        [DataMember(Name="max_pipeline_size", EmitDefaultValue=false)]
        public int? MaxPipelineSize { get; set; }

        /// <summary>
        /// Gets or Sets MaxSessions
        /// </summary>
        [DataMember(Name="max_sessions", EmitDefaultValue=false)]
        public int? MaxSessions { get; set; }

        /// <summary>
        /// Gets or Sets Pool
        /// </summary>
        [DataMember(Name="pool", EmitDefaultValue=false)]
        public StorageConnectionCouchdbSettingsPool Pool { get; set; }

        /// <summary>
        /// Gets or Sets Port
        /// </summary>
        [DataMember(Name="port", EmitDefaultValue=false)]
        public int? Port { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class StorageConnectionCouchdbSettings {\n");
            sb.Append("  ConnectOptions: ").Append(ConnectOptions).Append("\n");
            sb.Append("  ConnectTimeout: ").Append(ConnectTimeout).Append("\n");
            sb.Append("  Credentials: ").Append(Credentials).Append("\n");
            sb.Append("  Ip: ").Append(Ip).Append("\n");
            sb.Append("  MaxPipelineSize: ").Append(MaxPipelineSize).Append("\n");
            sb.Append("  MaxSessions: ").Append(MaxSessions).Append("\n");
            sb.Append("  Pool: ").Append(Pool).Append("\n");
            sb.Append("  Port: ").Append(Port).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as StorageConnectionCouchdbSettings);
        }

        /// <summary>
        /// Returns true if StorageConnectionCouchdbSettings instances are equal
        /// </summary>
        /// <param name="input">Instance of StorageConnectionCouchdbSettings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(StorageConnectionCouchdbSettings input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ConnectOptions == input.ConnectOptions ||
                    (this.ConnectOptions != null &&
                    this.ConnectOptions.Equals(input.ConnectOptions))
                ) && 
                (
                    this.ConnectTimeout == input.ConnectTimeout ||
                    (this.ConnectTimeout != null &&
                    this.ConnectTimeout.Equals(input.ConnectTimeout))
                ) && 
                (
                    this.Credentials == input.Credentials ||
                    (this.Credentials != null &&
                    this.Credentials.Equals(input.Credentials))
                ) && 
                (
                    this.Ip == input.Ip ||
                    (this.Ip != null &&
                    this.Ip.Equals(input.Ip))
                ) && 
                (
                    this.MaxPipelineSize == input.MaxPipelineSize ||
                    (this.MaxPipelineSize != null &&
                    this.MaxPipelineSize.Equals(input.MaxPipelineSize))
                ) && 
                (
                    this.MaxSessions == input.MaxSessions ||
                    (this.MaxSessions != null &&
                    this.MaxSessions.Equals(input.MaxSessions))
                ) && 
                (
                    this.Pool == input.Pool ||
                    (this.Pool != null &&
                    this.Pool.Equals(input.Pool))
                ) && 
                (
                    this.Port == input.Port ||
                    (this.Port != null &&
                    this.Port.Equals(input.Port))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ConnectOptions != null)
                    hashCode = hashCode * 59 + this.ConnectOptions.GetHashCode();
                if (this.ConnectTimeout != null)
                    hashCode = hashCode * 59 + this.ConnectTimeout.GetHashCode();
                if (this.Credentials != null)
                    hashCode = hashCode * 59 + this.Credentials.GetHashCode();
                if (this.Ip != null)
                    hashCode = hashCode * 59 + this.Ip.GetHashCode();
                if (this.MaxPipelineSize != null)
                    hashCode = hashCode * 59 + this.MaxPipelineSize.GetHashCode();
                if (this.MaxSessions != null)
                    hashCode = hashCode * 59 + this.MaxSessions.GetHashCode();
                if (this.Pool != null)
                    hashCode = hashCode * 59 + this.Pool.GetHashCode();
                if (this.Port != null)
                    hashCode = hashCode * 59 + this.Port.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
