/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Schema for callflow.hotdesk system_config
    /// </summary>
    [DataContract]
    public partial class SystemConfigCallflowHotdesk :  IEquatable<SystemConfigCallflowHotdesk>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemConfigCallflowHotdesk" /> class.
        /// </summary>
        /// <param name="maxHotdeskIdLength">callflow.hotdesk maximum hotdesk id length.</param>
        /// <param name="maxLoginAttempts">callflow.hotdesk maximum login attempts.</param>
        /// <param name="maxPinLength">callflow.hotdesk maximum pin length.</param>
        public SystemConfigCallflowHotdesk(int? maxHotdeskIdLength = default(int?), int? maxLoginAttempts = default(int?), int? maxPinLength = default(int?))
        {
            this.MaxHotdeskIdLength = maxHotdeskIdLength;
            this.MaxLoginAttempts = maxLoginAttempts;
            this.MaxPinLength = maxPinLength;
        }
        
        /// <summary>
        /// callflow.hotdesk maximum hotdesk id length
        /// </summary>
        /// <value>callflow.hotdesk maximum hotdesk id length</value>
        [DataMember(Name="max_hotdesk_id_length", EmitDefaultValue=false)]
        public int? MaxHotdeskIdLength { get; set; }

        /// <summary>
        /// callflow.hotdesk maximum login attempts
        /// </summary>
        /// <value>callflow.hotdesk maximum login attempts</value>
        [DataMember(Name="max_login_attempts", EmitDefaultValue=false)]
        public int? MaxLoginAttempts { get; set; }

        /// <summary>
        /// callflow.hotdesk maximum pin length
        /// </summary>
        /// <value>callflow.hotdesk maximum pin length</value>
        [DataMember(Name="max_pin_length", EmitDefaultValue=false)]
        public int? MaxPinLength { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SystemConfigCallflowHotdesk {\n");
            sb.Append("  MaxHotdeskIdLength: ").Append(MaxHotdeskIdLength).Append("\n");
            sb.Append("  MaxLoginAttempts: ").Append(MaxLoginAttempts).Append("\n");
            sb.Append("  MaxPinLength: ").Append(MaxPinLength).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SystemConfigCallflowHotdesk);
        }

        /// <summary>
        /// Returns true if SystemConfigCallflowHotdesk instances are equal
        /// </summary>
        /// <param name="input">Instance of SystemConfigCallflowHotdesk to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SystemConfigCallflowHotdesk input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MaxHotdeskIdLength == input.MaxHotdeskIdLength ||
                    (this.MaxHotdeskIdLength != null &&
                    this.MaxHotdeskIdLength.Equals(input.MaxHotdeskIdLength))
                ) && 
                (
                    this.MaxLoginAttempts == input.MaxLoginAttempts ||
                    (this.MaxLoginAttempts != null &&
                    this.MaxLoginAttempts.Equals(input.MaxLoginAttempts))
                ) && 
                (
                    this.MaxPinLength == input.MaxPinLength ||
                    (this.MaxPinLength != null &&
                    this.MaxPinLength.Equals(input.MaxPinLength))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MaxHotdeskIdLength != null)
                    hashCode = hashCode * 59 + this.MaxHotdeskIdLength.GetHashCode();
                if (this.MaxLoginAttempts != null)
                    hashCode = hashCode * 59 + this.MaxLoginAttempts.GetHashCode();
                if (this.MaxPinLength != null)
                    hashCode = hashCode * 59 + this.MaxPinLength.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
