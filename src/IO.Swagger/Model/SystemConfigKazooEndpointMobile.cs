/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Schema for kazoo_endpoint.mobile system_config
    /// </summary>
    [DataContract]
    public partial class SystemConfigKazooEndpointMobile :  IEquatable<SystemConfigKazooEndpointMobile>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemConfigKazooEndpointMobile" /> class.
        /// </summary>
        /// <param name="codecs">kazoo_endpoint.mobile codecs.</param>
        /// <param name="createSipEndpoint">kazoo_endpoint.mobile create sip endpoint (default to false).</param>
        /// <param name="customSipInterface">kazoo_endpoint.mobile custom sip interface.</param>
        /// <param name="formatter">kazoo_endpoint.mobile formatter (default to &quot;^\+?1?([2-9][0-9]{2}[2-9][0-9]{6})$&quot;).</param>
        /// <param name="path">kazoo_endpoint.mobile path (default to &quot;&quot;).</param>
        /// <param name="prefix">kazoo_endpoint.mobile prefix (default to &quot;&quot;).</param>
        /// <param name="realm">kazoo_endpoint.mobile realm (default to &quot;mobile.k.zswitch.net&quot;).</param>
        /// <param name="sms">sms.</param>
        /// <param name="smsInterface">kazoo_endpoint.mobile sms interface (default to &quot;amqp&quot;).</param>
        /// <param name="suffix">kazoo_endpoint.mobile suffix (default to &quot;&quot;).</param>
        public SystemConfigKazooEndpointMobile(List<string> codecs = default(List<string>), bool? createSipEndpoint = false, string customSipInterface = default(string), string formatter = "^\+?1?([2-9][0-9]{2}[2-9][0-9]{6})$", string path = "", string prefix = "", string realm = "mobile.k.zswitch.net", SystemConfigKazooEndpointMobileSms sms = default(SystemConfigKazooEndpointMobileSms), string smsInterface = "amqp", string suffix = "")
        {
            this.Codecs = codecs;
            // use default value if no "createSipEndpoint" provided
            if (createSipEndpoint == null)
            {
                this.CreateSipEndpoint = false;
            }
            else
            {
                this.CreateSipEndpoint = createSipEndpoint;
            }
            this.CustomSipInterface = customSipInterface;
            // use default value if no "formatter" provided
            if (formatter == null)
            {
                this.Formatter = "^\+?1?([2-9][0-9]{2}[2-9][0-9]{6})$";
            }
            else
            {
                this.Formatter = formatter;
            }
            // use default value if no "path" provided
            if (path == null)
            {
                this.Path = "";
            }
            else
            {
                this.Path = path;
            }
            // use default value if no "prefix" provided
            if (prefix == null)
            {
                this.Prefix = "";
            }
            else
            {
                this.Prefix = prefix;
            }
            // use default value if no "realm" provided
            if (realm == null)
            {
                this.Realm = "mobile.k.zswitch.net";
            }
            else
            {
                this.Realm = realm;
            }
            this.Sms = sms;
            // use default value if no "smsInterface" provided
            if (smsInterface == null)
            {
                this.SmsInterface = "amqp";
            }
            else
            {
                this.SmsInterface = smsInterface;
            }
            // use default value if no "suffix" provided
            if (suffix == null)
            {
                this.Suffix = "";
            }
            else
            {
                this.Suffix = suffix;
            }
        }
        
        /// <summary>
        /// kazoo_endpoint.mobile codecs
        /// </summary>
        /// <value>kazoo_endpoint.mobile codecs</value>
        [DataMember(Name="codecs", EmitDefaultValue=false)]
        public List<string> Codecs { get; set; }

        /// <summary>
        /// kazoo_endpoint.mobile create sip endpoint
        /// </summary>
        /// <value>kazoo_endpoint.mobile create sip endpoint</value>
        [DataMember(Name="create_sip_endpoint", EmitDefaultValue=false)]
        public bool? CreateSipEndpoint { get; set; }

        /// <summary>
        /// kazoo_endpoint.mobile custom sip interface
        /// </summary>
        /// <value>kazoo_endpoint.mobile custom sip interface</value>
        [DataMember(Name="custom_sip_interface", EmitDefaultValue=false)]
        public string CustomSipInterface { get; set; }

        /// <summary>
        /// kazoo_endpoint.mobile formatter
        /// </summary>
        /// <value>kazoo_endpoint.mobile formatter</value>
        [DataMember(Name="formatter", EmitDefaultValue=false)]
        public string Formatter { get; set; }

        /// <summary>
        /// kazoo_endpoint.mobile path
        /// </summary>
        /// <value>kazoo_endpoint.mobile path</value>
        [DataMember(Name="path", EmitDefaultValue=false)]
        public string Path { get; set; }

        /// <summary>
        /// kazoo_endpoint.mobile prefix
        /// </summary>
        /// <value>kazoo_endpoint.mobile prefix</value>
        [DataMember(Name="prefix", EmitDefaultValue=false)]
        public string Prefix { get; set; }

        /// <summary>
        /// kazoo_endpoint.mobile realm
        /// </summary>
        /// <value>kazoo_endpoint.mobile realm</value>
        [DataMember(Name="realm", EmitDefaultValue=false)]
        public string Realm { get; set; }

        /// <summary>
        /// Gets or Sets Sms
        /// </summary>
        [DataMember(Name="sms", EmitDefaultValue=false)]
        public SystemConfigKazooEndpointMobileSms Sms { get; set; }

        /// <summary>
        /// kazoo_endpoint.mobile sms interface
        /// </summary>
        /// <value>kazoo_endpoint.mobile sms interface</value>
        [DataMember(Name="sms_interface", EmitDefaultValue=false)]
        public string SmsInterface { get; set; }

        /// <summary>
        /// kazoo_endpoint.mobile suffix
        /// </summary>
        /// <value>kazoo_endpoint.mobile suffix</value>
        [DataMember(Name="suffix", EmitDefaultValue=false)]
        public string Suffix { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SystemConfigKazooEndpointMobile {\n");
            sb.Append("  Codecs: ").Append(Codecs).Append("\n");
            sb.Append("  CreateSipEndpoint: ").Append(CreateSipEndpoint).Append("\n");
            sb.Append("  CustomSipInterface: ").Append(CustomSipInterface).Append("\n");
            sb.Append("  Formatter: ").Append(Formatter).Append("\n");
            sb.Append("  Path: ").Append(Path).Append("\n");
            sb.Append("  Prefix: ").Append(Prefix).Append("\n");
            sb.Append("  Realm: ").Append(Realm).Append("\n");
            sb.Append("  Sms: ").Append(Sms).Append("\n");
            sb.Append("  SmsInterface: ").Append(SmsInterface).Append("\n");
            sb.Append("  Suffix: ").Append(Suffix).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SystemConfigKazooEndpointMobile);
        }

        /// <summary>
        /// Returns true if SystemConfigKazooEndpointMobile instances are equal
        /// </summary>
        /// <param name="input">Instance of SystemConfigKazooEndpointMobile to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SystemConfigKazooEndpointMobile input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Codecs == input.Codecs ||
                    this.Codecs != null &&
                    this.Codecs.SequenceEqual(input.Codecs)
                ) && 
                (
                    this.CreateSipEndpoint == input.CreateSipEndpoint ||
                    (this.CreateSipEndpoint != null &&
                    this.CreateSipEndpoint.Equals(input.CreateSipEndpoint))
                ) && 
                (
                    this.CustomSipInterface == input.CustomSipInterface ||
                    (this.CustomSipInterface != null &&
                    this.CustomSipInterface.Equals(input.CustomSipInterface))
                ) && 
                (
                    this.Formatter == input.Formatter ||
                    (this.Formatter != null &&
                    this.Formatter.Equals(input.Formatter))
                ) && 
                (
                    this.Path == input.Path ||
                    (this.Path != null &&
                    this.Path.Equals(input.Path))
                ) && 
                (
                    this.Prefix == input.Prefix ||
                    (this.Prefix != null &&
                    this.Prefix.Equals(input.Prefix))
                ) && 
                (
                    this.Realm == input.Realm ||
                    (this.Realm != null &&
                    this.Realm.Equals(input.Realm))
                ) && 
                (
                    this.Sms == input.Sms ||
                    (this.Sms != null &&
                    this.Sms.Equals(input.Sms))
                ) && 
                (
                    this.SmsInterface == input.SmsInterface ||
                    (this.SmsInterface != null &&
                    this.SmsInterface.Equals(input.SmsInterface))
                ) && 
                (
                    this.Suffix == input.Suffix ||
                    (this.Suffix != null &&
                    this.Suffix.Equals(input.Suffix))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Codecs != null)
                    hashCode = hashCode * 59 + this.Codecs.GetHashCode();
                if (this.CreateSipEndpoint != null)
                    hashCode = hashCode * 59 + this.CreateSipEndpoint.GetHashCode();
                if (this.CustomSipInterface != null)
                    hashCode = hashCode * 59 + this.CustomSipInterface.GetHashCode();
                if (this.Formatter != null)
                    hashCode = hashCode * 59 + this.Formatter.GetHashCode();
                if (this.Path != null)
                    hashCode = hashCode * 59 + this.Path.GetHashCode();
                if (this.Prefix != null)
                    hashCode = hashCode * 59 + this.Prefix.GetHashCode();
                if (this.Realm != null)
                    hashCode = hashCode * 59 + this.Realm.GetHashCode();
                if (this.Sms != null)
                    hashCode = hashCode * 59 + this.Sms.GetHashCode();
                if (this.SmsInterface != null)
                    hashCode = hashCode * 59 + this.SmsInterface.GetHashCode();
                if (this.Suffix != null)
                    hashCode = hashCode * 59 + this.Suffix.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
