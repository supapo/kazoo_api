/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// SystemConfigCallflowVoicemail
    /// </summary>
    [DataContract]
    public partial class SystemConfigCallflowVoicemail :  IEquatable<SystemConfigCallflowVoicemail>, IValidatableObject
    {
        /// <summary>
        /// Enable or disable the ability to prepend a message when forwarding a voicemail message
        /// </summary>
        /// <value>Enable or disable the ability to prepend a message when forwarding a voicemail message</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum VmMessageForwardTypeEnum
        {
            
            /// <summary>
            /// Enum Onlyforward for value: only_forward
            /// </summary>
            [EnumMember(Value = "only_forward")]
            Onlyforward = 1,
            
            /// <summary>
            /// Enum Prependforward for value: prepend_forward
            /// </summary>
            [EnumMember(Value = "prepend_forward")]
            Prependforward = 2
        }

        /// <summary>
        /// Enable or disable the ability to prepend a message when forwarding a voicemail message
        /// </summary>
        /// <value>Enable or disable the ability to prepend a message when forwarding a voicemail message</value>
        [DataMember(Name="vm_message_forward_type", EmitDefaultValue=false)]
        public VmMessageForwardTypeEnum? VmMessageForwardType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemConfigCallflowVoicemail" /> class.
        /// </summary>
        /// <param name="deleteAfterNotify">callflow delete after notify (default to false).</param>
        /// <param name="extension">Default media file format for Callflow modules (default to &quot;mp3&quot;).</param>
        /// <param name="forceRequirePin">If true, ignore the setting on the vmbox and require all users to enter a pin (default to false).</param>
        /// <param name="isVoicemailFfRwEnabled">callflow allow fastforward and rewind during voicemail message playback (default to false).</param>
        /// <param name="maxBoxNumberLength">callflow maximum box number length.</param>
        /// <param name="maxLoginAttempts">callflow max login attempts.</param>
        /// <param name="maxMessageCount">callflow maximum message count.</param>
        /// <param name="maxMessageLength">callflow maximum message length.</param>
        /// <param name="maxPinLength">callflow maximum pin length.</param>
        /// <param name="messageRetentionDuration">Voicemail message retention duration in days.</param>
        /// <param name="migrateInteraccountDelayMs">callflow migrate interaccount delay in milliseconds.</param>
        /// <param name="migrateMaxBulkInsert">callflow migrate maximum bulk insert.</param>
        /// <param name="migrateMaxWorker">callflow migrate max worker.</param>
        /// <param name="minMessageSize">callflow minimum message size.</param>
        /// <param name="saveAfterNotify">callflow save after notify (default to false).</param>
        /// <param name="seekDurationMs">callflow fastforward and rewind seek duration.</param>
        /// <param name="vmMessageForwardType">Enable or disable the ability to prepend a message when forwarding a voicemail message (default to VmMessageForwardTypeEnum.Onlyforward).</param>
        public SystemConfigCallflowVoicemail(bool? deleteAfterNotify = false, string extension = "mp3", bool? forceRequirePin = false, bool? isVoicemailFfRwEnabled = false, int? maxBoxNumberLength = default(int?), int? maxLoginAttempts = default(int?), int? maxMessageCount = default(int?), int? maxMessageLength = default(int?), int? maxPinLength = default(int?), int? messageRetentionDuration = default(int?), int? migrateInteraccountDelayMs = default(int?), int? migrateMaxBulkInsert = default(int?), int? migrateMaxWorker = default(int?), int? minMessageSize = default(int?), bool? saveAfterNotify = false, int? seekDurationMs = default(int?), VmMessageForwardTypeEnum? vmMessageForwardType = VmMessageForwardTypeEnum.Onlyforward)
        {
            // use default value if no "deleteAfterNotify" provided
            if (deleteAfterNotify == null)
            {
                this.DeleteAfterNotify = false;
            }
            else
            {
                this.DeleteAfterNotify = deleteAfterNotify;
            }
            // use default value if no "extension" provided
            if (extension == null)
            {
                this.Extension = "mp3";
            }
            else
            {
                this.Extension = extension;
            }
            // use default value if no "forceRequirePin" provided
            if (forceRequirePin == null)
            {
                this.ForceRequirePin = false;
            }
            else
            {
                this.ForceRequirePin = forceRequirePin;
            }
            // use default value if no "isVoicemailFfRwEnabled" provided
            if (isVoicemailFfRwEnabled == null)
            {
                this.IsVoicemailFfRwEnabled = false;
            }
            else
            {
                this.IsVoicemailFfRwEnabled = isVoicemailFfRwEnabled;
            }
            this.MaxBoxNumberLength = maxBoxNumberLength;
            this.MaxLoginAttempts = maxLoginAttempts;
            this.MaxMessageCount = maxMessageCount;
            this.MaxMessageLength = maxMessageLength;
            this.MaxPinLength = maxPinLength;
            this.MessageRetentionDuration = messageRetentionDuration;
            this.MigrateInteraccountDelayMs = migrateInteraccountDelayMs;
            this.MigrateMaxBulkInsert = migrateMaxBulkInsert;
            this.MigrateMaxWorker = migrateMaxWorker;
            this.MinMessageSize = minMessageSize;
            // use default value if no "saveAfterNotify" provided
            if (saveAfterNotify == null)
            {
                this.SaveAfterNotify = false;
            }
            else
            {
                this.SaveAfterNotify = saveAfterNotify;
            }
            this.SeekDurationMs = seekDurationMs;
            // use default value if no "vmMessageForwardType" provided
            if (vmMessageForwardType == null)
            {
                this.VmMessageForwardType = VmMessageForwardTypeEnum.Onlyforward;
            }
            else
            {
                this.VmMessageForwardType = vmMessageForwardType;
            }
        }
        
        /// <summary>
        /// callflow delete after notify
        /// </summary>
        /// <value>callflow delete after notify</value>
        [DataMember(Name="delete_after_notify", EmitDefaultValue=false)]
        public bool? DeleteAfterNotify { get; set; }

        /// <summary>
        /// Default media file format for Callflow modules
        /// </summary>
        /// <value>Default media file format for Callflow modules</value>
        [DataMember(Name="extension", EmitDefaultValue=false)]
        public string Extension { get; set; }

        /// <summary>
        /// If true, ignore the setting on the vmbox and require all users to enter a pin
        /// </summary>
        /// <value>If true, ignore the setting on the vmbox and require all users to enter a pin</value>
        [DataMember(Name="force_require_pin", EmitDefaultValue=false)]
        public bool? ForceRequirePin { get; set; }

        /// <summary>
        /// callflow allow fastforward and rewind during voicemail message playback
        /// </summary>
        /// <value>callflow allow fastforward and rewind during voicemail message playback</value>
        [DataMember(Name="is_voicemail_ff_rw_enabled", EmitDefaultValue=false)]
        public bool? IsVoicemailFfRwEnabled { get; set; }

        /// <summary>
        /// callflow maximum box number length
        /// </summary>
        /// <value>callflow maximum box number length</value>
        [DataMember(Name="max_box_number_length", EmitDefaultValue=false)]
        public int? MaxBoxNumberLength { get; set; }

        /// <summary>
        /// callflow max login attempts
        /// </summary>
        /// <value>callflow max login attempts</value>
        [DataMember(Name="max_login_attempts", EmitDefaultValue=false)]
        public int? MaxLoginAttempts { get; set; }

        /// <summary>
        /// callflow maximum message count
        /// </summary>
        /// <value>callflow maximum message count</value>
        [DataMember(Name="max_message_count", EmitDefaultValue=false)]
        public int? MaxMessageCount { get; set; }

        /// <summary>
        /// callflow maximum message length
        /// </summary>
        /// <value>callflow maximum message length</value>
        [DataMember(Name="max_message_length", EmitDefaultValue=false)]
        public int? MaxMessageLength { get; set; }

        /// <summary>
        /// callflow maximum pin length
        /// </summary>
        /// <value>callflow maximum pin length</value>
        [DataMember(Name="max_pin_length", EmitDefaultValue=false)]
        public int? MaxPinLength { get; set; }

        /// <summary>
        /// Voicemail message retention duration in days
        /// </summary>
        /// <value>Voicemail message retention duration in days</value>
        [DataMember(Name="message_retention_duration", EmitDefaultValue=false)]
        public int? MessageRetentionDuration { get; set; }

        /// <summary>
        /// callflow migrate interaccount delay in milliseconds
        /// </summary>
        /// <value>callflow migrate interaccount delay in milliseconds</value>
        [DataMember(Name="migrate_interaccount_delay_ms", EmitDefaultValue=false)]
        public int? MigrateInteraccountDelayMs { get; set; }

        /// <summary>
        /// callflow migrate maximum bulk insert
        /// </summary>
        /// <value>callflow migrate maximum bulk insert</value>
        [DataMember(Name="migrate_max_bulk_insert", EmitDefaultValue=false)]
        public int? MigrateMaxBulkInsert { get; set; }

        /// <summary>
        /// callflow migrate max worker
        /// </summary>
        /// <value>callflow migrate max worker</value>
        [DataMember(Name="migrate_max_worker", EmitDefaultValue=false)]
        public int? MigrateMaxWorker { get; set; }

        /// <summary>
        /// callflow minimum message size
        /// </summary>
        /// <value>callflow minimum message size</value>
        [DataMember(Name="min_message_size", EmitDefaultValue=false)]
        public int? MinMessageSize { get; set; }

        /// <summary>
        /// callflow save after notify
        /// </summary>
        /// <value>callflow save after notify</value>
        [DataMember(Name="save_after_notify", EmitDefaultValue=false)]
        public bool? SaveAfterNotify { get; set; }

        /// <summary>
        /// callflow fastforward and rewind seek duration
        /// </summary>
        /// <value>callflow fastforward and rewind seek duration</value>
        [DataMember(Name="seek_duration_ms", EmitDefaultValue=false)]
        public int? SeekDurationMs { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SystemConfigCallflowVoicemail {\n");
            sb.Append("  DeleteAfterNotify: ").Append(DeleteAfterNotify).Append("\n");
            sb.Append("  Extension: ").Append(Extension).Append("\n");
            sb.Append("  ForceRequirePin: ").Append(ForceRequirePin).Append("\n");
            sb.Append("  IsVoicemailFfRwEnabled: ").Append(IsVoicemailFfRwEnabled).Append("\n");
            sb.Append("  MaxBoxNumberLength: ").Append(MaxBoxNumberLength).Append("\n");
            sb.Append("  MaxLoginAttempts: ").Append(MaxLoginAttempts).Append("\n");
            sb.Append("  MaxMessageCount: ").Append(MaxMessageCount).Append("\n");
            sb.Append("  MaxMessageLength: ").Append(MaxMessageLength).Append("\n");
            sb.Append("  MaxPinLength: ").Append(MaxPinLength).Append("\n");
            sb.Append("  MessageRetentionDuration: ").Append(MessageRetentionDuration).Append("\n");
            sb.Append("  MigrateInteraccountDelayMs: ").Append(MigrateInteraccountDelayMs).Append("\n");
            sb.Append("  MigrateMaxBulkInsert: ").Append(MigrateMaxBulkInsert).Append("\n");
            sb.Append("  MigrateMaxWorker: ").Append(MigrateMaxWorker).Append("\n");
            sb.Append("  MinMessageSize: ").Append(MinMessageSize).Append("\n");
            sb.Append("  SaveAfterNotify: ").Append(SaveAfterNotify).Append("\n");
            sb.Append("  SeekDurationMs: ").Append(SeekDurationMs).Append("\n");
            sb.Append("  VmMessageForwardType: ").Append(VmMessageForwardType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SystemConfigCallflowVoicemail);
        }

        /// <summary>
        /// Returns true if SystemConfigCallflowVoicemail instances are equal
        /// </summary>
        /// <param name="input">Instance of SystemConfigCallflowVoicemail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SystemConfigCallflowVoicemail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DeleteAfterNotify == input.DeleteAfterNotify ||
                    (this.DeleteAfterNotify != null &&
                    this.DeleteAfterNotify.Equals(input.DeleteAfterNotify))
                ) && 
                (
                    this.Extension == input.Extension ||
                    (this.Extension != null &&
                    this.Extension.Equals(input.Extension))
                ) && 
                (
                    this.ForceRequirePin == input.ForceRequirePin ||
                    (this.ForceRequirePin != null &&
                    this.ForceRequirePin.Equals(input.ForceRequirePin))
                ) && 
                (
                    this.IsVoicemailFfRwEnabled == input.IsVoicemailFfRwEnabled ||
                    (this.IsVoicemailFfRwEnabled != null &&
                    this.IsVoicemailFfRwEnabled.Equals(input.IsVoicemailFfRwEnabled))
                ) && 
                (
                    this.MaxBoxNumberLength == input.MaxBoxNumberLength ||
                    (this.MaxBoxNumberLength != null &&
                    this.MaxBoxNumberLength.Equals(input.MaxBoxNumberLength))
                ) && 
                (
                    this.MaxLoginAttempts == input.MaxLoginAttempts ||
                    (this.MaxLoginAttempts != null &&
                    this.MaxLoginAttempts.Equals(input.MaxLoginAttempts))
                ) && 
                (
                    this.MaxMessageCount == input.MaxMessageCount ||
                    (this.MaxMessageCount != null &&
                    this.MaxMessageCount.Equals(input.MaxMessageCount))
                ) && 
                (
                    this.MaxMessageLength == input.MaxMessageLength ||
                    (this.MaxMessageLength != null &&
                    this.MaxMessageLength.Equals(input.MaxMessageLength))
                ) && 
                (
                    this.MaxPinLength == input.MaxPinLength ||
                    (this.MaxPinLength != null &&
                    this.MaxPinLength.Equals(input.MaxPinLength))
                ) && 
                (
                    this.MessageRetentionDuration == input.MessageRetentionDuration ||
                    (this.MessageRetentionDuration != null &&
                    this.MessageRetentionDuration.Equals(input.MessageRetentionDuration))
                ) && 
                (
                    this.MigrateInteraccountDelayMs == input.MigrateInteraccountDelayMs ||
                    (this.MigrateInteraccountDelayMs != null &&
                    this.MigrateInteraccountDelayMs.Equals(input.MigrateInteraccountDelayMs))
                ) && 
                (
                    this.MigrateMaxBulkInsert == input.MigrateMaxBulkInsert ||
                    (this.MigrateMaxBulkInsert != null &&
                    this.MigrateMaxBulkInsert.Equals(input.MigrateMaxBulkInsert))
                ) && 
                (
                    this.MigrateMaxWorker == input.MigrateMaxWorker ||
                    (this.MigrateMaxWorker != null &&
                    this.MigrateMaxWorker.Equals(input.MigrateMaxWorker))
                ) && 
                (
                    this.MinMessageSize == input.MinMessageSize ||
                    (this.MinMessageSize != null &&
                    this.MinMessageSize.Equals(input.MinMessageSize))
                ) && 
                (
                    this.SaveAfterNotify == input.SaveAfterNotify ||
                    (this.SaveAfterNotify != null &&
                    this.SaveAfterNotify.Equals(input.SaveAfterNotify))
                ) && 
                (
                    this.SeekDurationMs == input.SeekDurationMs ||
                    (this.SeekDurationMs != null &&
                    this.SeekDurationMs.Equals(input.SeekDurationMs))
                ) && 
                (
                    this.VmMessageForwardType == input.VmMessageForwardType ||
                    (this.VmMessageForwardType != null &&
                    this.VmMessageForwardType.Equals(input.VmMessageForwardType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DeleteAfterNotify != null)
                    hashCode = hashCode * 59 + this.DeleteAfterNotify.GetHashCode();
                if (this.Extension != null)
                    hashCode = hashCode * 59 + this.Extension.GetHashCode();
                if (this.ForceRequirePin != null)
                    hashCode = hashCode * 59 + this.ForceRequirePin.GetHashCode();
                if (this.IsVoicemailFfRwEnabled != null)
                    hashCode = hashCode * 59 + this.IsVoicemailFfRwEnabled.GetHashCode();
                if (this.MaxBoxNumberLength != null)
                    hashCode = hashCode * 59 + this.MaxBoxNumberLength.GetHashCode();
                if (this.MaxLoginAttempts != null)
                    hashCode = hashCode * 59 + this.MaxLoginAttempts.GetHashCode();
                if (this.MaxMessageCount != null)
                    hashCode = hashCode * 59 + this.MaxMessageCount.GetHashCode();
                if (this.MaxMessageLength != null)
                    hashCode = hashCode * 59 + this.MaxMessageLength.GetHashCode();
                if (this.MaxPinLength != null)
                    hashCode = hashCode * 59 + this.MaxPinLength.GetHashCode();
                if (this.MessageRetentionDuration != null)
                    hashCode = hashCode * 59 + this.MessageRetentionDuration.GetHashCode();
                if (this.MigrateInteraccountDelayMs != null)
                    hashCode = hashCode * 59 + this.MigrateInteraccountDelayMs.GetHashCode();
                if (this.MigrateMaxBulkInsert != null)
                    hashCode = hashCode * 59 + this.MigrateMaxBulkInsert.GetHashCode();
                if (this.MigrateMaxWorker != null)
                    hashCode = hashCode * 59 + this.MigrateMaxWorker.GetHashCode();
                if (this.MinMessageSize != null)
                    hashCode = hashCode * 59 + this.MinMessageSize.GetHashCode();
                if (this.SaveAfterNotify != null)
                    hashCode = hashCode * 59 + this.SaveAfterNotify.GetHashCode();
                if (this.SeekDurationMs != null)
                    hashCode = hashCode * 59 + this.SeekDurationMs.GetHashCode();
                if (this.VmMessageForwardType != null)
                    hashCode = hashCode * 59 + this.VmMessageForwardType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // SeekDurationMs (int?) minimum
            if(this.SeekDurationMs < (int?)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for SeekDurationMs, must be a value greater than or equal to 0.", new [] { "SeekDurationMs" });
            }

            yield break;
        }
    }

}
