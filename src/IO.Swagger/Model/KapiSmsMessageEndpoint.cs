/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// AMQP API for sms.message_endpoint
    /// </summary>
    [DataContract]
    public partial class KapiSmsMessageEndpoint :  IEquatable<KapiSmsMessageEndpoint>, IValidatableObject
    {
        /// <summary>
        /// Defines EndpointType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum EndpointTypeEnum
        {
            
            /// <summary>
            /// Enum Sip for value: sip
            /// </summary>
            [EnumMember(Value = "sip")]
            Sip = 1,
            
            /// <summary>
            /// Enum Xmpp for value: xmpp
            /// </summary>
            [EnumMember(Value = "xmpp")]
            Xmpp = 2,
            
            /// <summary>
            /// Enum Smpp for value: smpp
            /// </summary>
            [EnumMember(Value = "smpp")]
            Smpp = 3,
            
            /// <summary>
            /// Enum Http for value: http
            /// </summary>
            [EnumMember(Value = "http")]
            Http = 4,
            
            /// <summary>
            /// Enum Amqp for value: amqp
            /// </summary>
            [EnumMember(Value = "amqp")]
            Amqp = 5
        }

        /// <summary>
        /// Gets or Sets EndpointType
        /// </summary>
        [DataMember(Name="Endpoint-Type", EmitDefaultValue=false)]
        public EndpointTypeEnum? EndpointType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="KapiSmsMessageEndpoint" /> class.
        /// </summary>
        /// <param name="customChannelVars">customChannelVars.</param>
        /// <param name="endpointOptions">endpointOptions.</param>
        /// <param name="endpointType">endpointType.</param>
        /// <param name="sIPHeaders">sIPHeaders.</param>
        public KapiSmsMessageEndpoint(Object customChannelVars = default(Object), Object endpointOptions = default(Object), EndpointTypeEnum? endpointType = default(EndpointTypeEnum?), Object sIPHeaders = default(Object))
        {
            this.CustomChannelVars = customChannelVars;
            this.EndpointOptions = endpointOptions;
            this.EndpointType = endpointType;
            this.SIPHeaders = sIPHeaders;
        }
        
        /// <summary>
        /// Gets or Sets CustomChannelVars
        /// </summary>
        [DataMember(Name="Custom-Channel-Vars", EmitDefaultValue=false)]
        public Object CustomChannelVars { get; set; }

        /// <summary>
        /// Gets or Sets EndpointOptions
        /// </summary>
        [DataMember(Name="Endpoint-Options", EmitDefaultValue=false)]
        public Object EndpointOptions { get; set; }


        /// <summary>
        /// Gets or Sets SIPHeaders
        /// </summary>
        [DataMember(Name="SIP-Headers", EmitDefaultValue=false)]
        public Object SIPHeaders { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class KapiSmsMessageEndpoint {\n");
            sb.Append("  CustomChannelVars: ").Append(CustomChannelVars).Append("\n");
            sb.Append("  EndpointOptions: ").Append(EndpointOptions).Append("\n");
            sb.Append("  EndpointType: ").Append(EndpointType).Append("\n");
            sb.Append("  SIPHeaders: ").Append(SIPHeaders).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KapiSmsMessageEndpoint);
        }

        /// <summary>
        /// Returns true if KapiSmsMessageEndpoint instances are equal
        /// </summary>
        /// <param name="input">Instance of KapiSmsMessageEndpoint to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KapiSmsMessageEndpoint input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CustomChannelVars == input.CustomChannelVars ||
                    (this.CustomChannelVars != null &&
                    this.CustomChannelVars.Equals(input.CustomChannelVars))
                ) && 
                (
                    this.EndpointOptions == input.EndpointOptions ||
                    (this.EndpointOptions != null &&
                    this.EndpointOptions.Equals(input.EndpointOptions))
                ) && 
                (
                    this.EndpointType == input.EndpointType ||
                    (this.EndpointType != null &&
                    this.EndpointType.Equals(input.EndpointType))
                ) && 
                (
                    this.SIPHeaders == input.SIPHeaders ||
                    (this.SIPHeaders != null &&
                    this.SIPHeaders.Equals(input.SIPHeaders))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CustomChannelVars != null)
                    hashCode = hashCode * 59 + this.CustomChannelVars.GetHashCode();
                if (this.EndpointOptions != null)
                    hashCode = hashCode * 59 + this.EndpointOptions.GetHashCode();
                if (this.EndpointType != null)
                    hashCode = hashCode * 59 + this.EndpointType.GetHashCode();
                if (this.SIPHeaders != null)
                    hashCode = hashCode * 59 + this.SIPHeaders.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
