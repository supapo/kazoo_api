/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Schema for crossbar.sms account_config
    /// </summary>
    [DataContract]
    public partial class AccountConfigCrossbarSms :  IEquatable<AccountConfigCrossbarSms>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountConfigCrossbarSms" /> class.
        /// </summary>
        /// <param name="apiE164ConvertFrom">crossbar.sms api e164 convert from (default to false).</param>
        /// <param name="apiE164ConvertTo">crossbar.sms api e164 convert to (default to false).</param>
        public AccountConfigCrossbarSms(bool? apiE164ConvertFrom = false, bool? apiE164ConvertTo = false)
        {
            // use default value if no "apiE164ConvertFrom" provided
            if (apiE164ConvertFrom == null)
            {
                this.ApiE164ConvertFrom = false;
            }
            else
            {
                this.ApiE164ConvertFrom = apiE164ConvertFrom;
            }
            // use default value if no "apiE164ConvertTo" provided
            if (apiE164ConvertTo == null)
            {
                this.ApiE164ConvertTo = false;
            }
            else
            {
                this.ApiE164ConvertTo = apiE164ConvertTo;
            }
        }
        
        /// <summary>
        /// crossbar.sms api e164 convert from
        /// </summary>
        /// <value>crossbar.sms api e164 convert from</value>
        [DataMember(Name="api_e164_convert_from", EmitDefaultValue=false)]
        public bool? ApiE164ConvertFrom { get; set; }

        /// <summary>
        /// crossbar.sms api e164 convert to
        /// </summary>
        /// <value>crossbar.sms api e164 convert to</value>
        [DataMember(Name="api_e164_convert_to", EmitDefaultValue=false)]
        public bool? ApiE164ConvertTo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AccountConfigCrossbarSms {\n");
            sb.Append("  ApiE164ConvertFrom: ").Append(ApiE164ConvertFrom).Append("\n");
            sb.Append("  ApiE164ConvertTo: ").Append(ApiE164ConvertTo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AccountConfigCrossbarSms);
        }

        /// <summary>
        /// Returns true if AccountConfigCrossbarSms instances are equal
        /// </summary>
        /// <param name="input">Instance of AccountConfigCrossbarSms to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AccountConfigCrossbarSms input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ApiE164ConvertFrom == input.ApiE164ConvertFrom ||
                    (this.ApiE164ConvertFrom != null &&
                    this.ApiE164ConvertFrom.Equals(input.ApiE164ConvertFrom))
                ) && 
                (
                    this.ApiE164ConvertTo == input.ApiE164ConvertTo ||
                    (this.ApiE164ConvertTo != null &&
                    this.ApiE164ConvertTo.Equals(input.ApiE164ConvertTo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ApiE164ConvertFrom != null)
                    hashCode = hashCode * 59 + this.ApiE164ConvertFrom.GetHashCode();
                if (this.ApiE164ConvertTo != null)
                    hashCode = hashCode * 59 + this.ApiE164ConvertTo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
