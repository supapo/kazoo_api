/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Schema for crossbar.resources system_config
    /// </summary>
    [DataContract]
    public partial class SystemConfigCrossbarResources :  IEquatable<SystemConfigCrossbarResources>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemConfigCrossbarResources" /> class.
        /// </summary>
        /// <param name="jobRecoveryThresholdS">crossbar.resources job recovery threshold in seconds.</param>
        /// <param name="jobRecoveryTimeoutS">crossbar.resources job recovery timeout in seconds.</param>
        public SystemConfigCrossbarResources(int? jobRecoveryThresholdS = default(int?), int? jobRecoveryTimeoutS = default(int?))
        {
            this.JobRecoveryThresholdS = jobRecoveryThresholdS;
            this.JobRecoveryTimeoutS = jobRecoveryTimeoutS;
        }
        
        /// <summary>
        /// crossbar.resources job recovery threshold in seconds
        /// </summary>
        /// <value>crossbar.resources job recovery threshold in seconds</value>
        [DataMember(Name="job_recovery_threshold_s", EmitDefaultValue=false)]
        public int? JobRecoveryThresholdS { get; set; }

        /// <summary>
        /// crossbar.resources job recovery timeout in seconds
        /// </summary>
        /// <value>crossbar.resources job recovery timeout in seconds</value>
        [DataMember(Name="job_recovery_timeout_s", EmitDefaultValue=false)]
        public int? JobRecoveryTimeoutS { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SystemConfigCrossbarResources {\n");
            sb.Append("  JobRecoveryThresholdS: ").Append(JobRecoveryThresholdS).Append("\n");
            sb.Append("  JobRecoveryTimeoutS: ").Append(JobRecoveryTimeoutS).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SystemConfigCrossbarResources);
        }

        /// <summary>
        /// Returns true if SystemConfigCrossbarResources instances are equal
        /// </summary>
        /// <param name="input">Instance of SystemConfigCrossbarResources to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SystemConfigCrossbarResources input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.JobRecoveryThresholdS == input.JobRecoveryThresholdS ||
                    (this.JobRecoveryThresholdS != null &&
                    this.JobRecoveryThresholdS.Equals(input.JobRecoveryThresholdS))
                ) && 
                (
                    this.JobRecoveryTimeoutS == input.JobRecoveryTimeoutS ||
                    (this.JobRecoveryTimeoutS != null &&
                    this.JobRecoveryTimeoutS.Equals(input.JobRecoveryTimeoutS))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.JobRecoveryThresholdS != null)
                    hashCode = hashCode * 59 + this.JobRecoveryThresholdS.GetHashCode();
                if (this.JobRecoveryTimeoutS != null)
                    hashCode = hashCode * 59 + this.JobRecoveryTimeoutS.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
