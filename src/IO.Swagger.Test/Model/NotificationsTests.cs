/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing Notifications
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class NotificationsTests
    {
        // TODO uncomment below to declare an instance variable for Notifications
        //private Notifications instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Notifications
            //instance = new Notifications();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Notifications
        /// </summary>
        [Test]
        public void NotificationsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Notifications
            //Assert.IsInstanceOfType<Notifications> (instance, "variable 'instance' is a Notifications");
        }


        /// <summary>
        /// Test the property 'Bcc'
        /// </summary>
        [Test]
        public void BccTest()
        {
            // TODO unit test for the property 'Bcc'
        }
        /// <summary>
        /// Test the property 'Category'
        /// </summary>
        [Test]
        public void CategoryTest()
        {
            // TODO unit test for the property 'Category'
        }
        /// <summary>
        /// Test the property 'Cc'
        /// </summary>
        [Test]
        public void CcTest()
        {
            // TODO unit test for the property 'Cc'
        }
        /// <summary>
        /// Test the property 'Enabled'
        /// </summary>
        [Test]
        public void EnabledTest()
        {
            // TODO unit test for the property 'Enabled'
        }
        /// <summary>
        /// Test the property 'FriendlyName'
        /// </summary>
        [Test]
        public void FriendlyNameTest()
        {
            // TODO unit test for the property 'FriendlyName'
        }
        /// <summary>
        /// Test the property 'From'
        /// </summary>
        [Test]
        public void FromTest()
        {
            // TODO unit test for the property 'From'
        }
        /// <summary>
        /// Test the property 'Macros'
        /// </summary>
        [Test]
        public void MacrosTest()
        {
            // TODO unit test for the property 'Macros'
        }
        /// <summary>
        /// Test the property 'ReplyTo'
        /// </summary>
        [Test]
        public void ReplyToTest()
        {
            // TODO unit test for the property 'ReplyTo'
        }
        /// <summary>
        /// Test the property 'Subject'
        /// </summary>
        [Test]
        public void SubjectTest()
        {
            // TODO unit test for the property 'Subject'
        }
        /// <summary>
        /// Test the property 'TemplateCharset'
        /// </summary>
        [Test]
        public void TemplateCharsetTest()
        {
            // TODO unit test for the property 'TemplateCharset'
        }
        /// <summary>
        /// Test the property 'To'
        /// </summary>
        [Test]
        public void ToTest()
        {
            // TODO unit test for the property 'To'
        }

    }

}
