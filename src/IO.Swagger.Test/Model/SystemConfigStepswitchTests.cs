/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing SystemConfigStepswitch
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class SystemConfigStepswitchTests
    {
        // TODO uncomment below to declare an instance variable for SystemConfigStepswitch
        //private SystemConfigStepswitch instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of SystemConfigStepswitch
            //instance = new SystemConfigStepswitch();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SystemConfigStepswitch
        /// </summary>
        [Test]
        public void SystemConfigStepswitchInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" SystemConfigStepswitch
            //Assert.IsInstanceOfType<SystemConfigStepswitch> (instance, "variable 'instance' is a SystemConfigStepswitch");
        }


        /// <summary>
        /// Test the property 'AssumeInboundE164'
        /// </summary>
        [Test]
        public void AssumeInboundE164Test()
        {
            // TODO unit test for the property 'AssumeInboundE164'
        }
        /// <summary>
        /// Test the property 'AssumeInboundOriginationE164'
        /// </summary>
        [Test]
        public void AssumeInboundOriginationE164Test()
        {
            // TODO unit test for the property 'AssumeInboundOriginationE164'
        }
        /// <summary>
        /// Test the property 'CidRulesHonorDiversions'
        /// </summary>
        [Test]
        public void CidRulesHonorDiversionsTest()
        {
            // TODO unit test for the property 'CidRulesHonorDiversions'
        }
        /// <summary>
        /// Test the property 'DefaultAudioCodecs'
        /// </summary>
        [Test]
        public void DefaultAudioCodecsTest()
        {
            // TODO unit test for the property 'DefaultAudioCodecs'
        }
        /// <summary>
        /// Test the property 'DefaultBypassMedia'
        /// </summary>
        [Test]
        public void DefaultBypassMediaTest()
        {
            // TODO unit test for the property 'DefaultBypassMedia'
        }
        /// <summary>
        /// Test the property 'DefaultCallerIdType'
        /// </summary>
        [Test]
        public void DefaultCallerIdTypeTest()
        {
            // TODO unit test for the property 'DefaultCallerIdType'
        }
        /// <summary>
        /// Test the property 'DefaultCodecs'
        /// </summary>
        [Test]
        public void DefaultCodecsTest()
        {
            // TODO unit test for the property 'DefaultCodecs'
        }
        /// <summary>
        /// Test the property 'DefaultEmergencyCidNumber'
        /// </summary>
        [Test]
        public void DefaultEmergencyCidNumberTest()
        {
            // TODO unit test for the property 'DefaultEmergencyCidNumber'
        }
        /// <summary>
        /// Test the property 'DefaultFormatters'
        /// </summary>
        [Test]
        public void DefaultFormattersTest()
        {
            // TODO unit test for the property 'DefaultFormatters'
        }
        /// <summary>
        /// Test the property 'DefaultPrefix'
        /// </summary>
        [Test]
        public void DefaultPrefixTest()
        {
            // TODO unit test for the property 'DefaultPrefix'
        }
        /// <summary>
        /// Test the property 'DefaultProgressTimeout'
        /// </summary>
        [Test]
        public void DefaultProgressTimeoutTest()
        {
            // TODO unit test for the property 'DefaultProgressTimeout'
        }
        /// <summary>
        /// Test the property 'DefaultRoute'
        /// </summary>
        [Test]
        public void DefaultRouteTest()
        {
            // TODO unit test for the property 'DefaultRoute'
        }
        /// <summary>
        /// Test the property 'DefaultRtcpMux'
        /// </summary>
        [Test]
        public void DefaultRtcpMuxTest()
        {
            // TODO unit test for the property 'DefaultRtcpMux'
        }
        /// <summary>
        /// Test the property 'DefaultSuffix'
        /// </summary>
        [Test]
        public void DefaultSuffixTest()
        {
            // TODO unit test for the property 'DefaultSuffix'
        }
        /// <summary>
        /// Test the property 'DefaultVideoCodecs'
        /// </summary>
        [Test]
        public void DefaultVideoCodecsTest()
        {
            // TODO unit test for the property 'DefaultVideoCodecs'
        }
        /// <summary>
        /// Test the property 'DefaultWeight'
        /// </summary>
        [Test]
        public void DefaultWeightTest()
        {
            // TODO unit test for the property 'DefaultWeight'
        }
        /// <summary>
        /// Test the property 'DenyEmergencyBridgeCause'
        /// </summary>
        [Test]
        public void DenyEmergencyBridgeCauseTest()
        {
            // TODO unit test for the property 'DenyEmergencyBridgeCause'
        }
        /// <summary>
        /// Test the property 'DenyEmergencyBridgeCode'
        /// </summary>
        [Test]
        public void DenyEmergencyBridgeCodeTest()
        {
            // TODO unit test for the property 'DenyEmergencyBridgeCode'
        }
        /// <summary>
        /// Test the property 'DenyEmergencyBridgeMedia'
        /// </summary>
        [Test]
        public void DenyEmergencyBridgeMediaTest()
        {
            // TODO unit test for the property 'DenyEmergencyBridgeMedia'
        }
        /// <summary>
        /// Test the property 'DenyInvalidEmergencyCid'
        /// </summary>
        [Test]
        public void DenyInvalidEmergencyCidTest()
        {
            // TODO unit test for the property 'DenyInvalidEmergencyCid'
        }
        /// <summary>
        /// Test the property 'EnsureValidEmergencyCid'
        /// </summary>
        [Test]
        public void EnsureValidEmergencyCidTest()
        {
            // TODO unit test for the property 'EnsureValidEmergencyCid'
        }
        /// <summary>
        /// Test the property 'FixedLengthShortdialCorrection'
        /// </summary>
        [Test]
        public void FixedLengthShortdialCorrectionTest()
        {
            // TODO unit test for the property 'FixedLengthShortdialCorrection'
        }
        /// <summary>
        /// Test the property 'FormatFromUri'
        /// </summary>
        [Test]
        public void FormatFromUriTest()
        {
            // TODO unit test for the property 'FormatFromUri'
        }
        /// <summary>
        /// Test the property 'InboundUserField'
        /// </summary>
        [Test]
        public void InboundUserFieldTest()
        {
            // TODO unit test for the property 'InboundUserField'
        }
        /// <summary>
        /// Test the property 'InboundUserOriginationField'
        /// </summary>
        [Test]
        public void InboundUserOriginationFieldTest()
        {
            // TODO unit test for the property 'InboundUserOriginationField'
        }
        /// <summary>
        /// Test the property 'MaxShortdialCorrection'
        /// </summary>
        [Test]
        public void MaxShortdialCorrectionTest()
        {
            // TODO unit test for the property 'MaxShortdialCorrection'
        }
        /// <summary>
        /// Test the property 'MinShortdialCorrection'
        /// </summary>
        [Test]
        public void MinShortdialCorrectionTest()
        {
            // TODO unit test for the property 'MinShortdialCorrection'
        }
        /// <summary>
        /// Test the property 'RouteBy'
        /// </summary>
        [Test]
        public void RouteByTest()
        {
            // TODO unit test for the property 'RouteBy'
        }
        /// <summary>
        /// Test the property 'UseFirstDedicatedProxyOnly'
        /// </summary>
        [Test]
        public void UseFirstDedicatedProxyOnlyTest()
        {
            // TODO unit test for the property 'UseFirstDedicatedProxyOnly'
        }

    }

}
