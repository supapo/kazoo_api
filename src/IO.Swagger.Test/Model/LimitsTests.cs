/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing Limits
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class LimitsTests
    {
        // TODO uncomment below to declare an instance variable for Limits
        //private Limits instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Limits
            //instance = new Limits();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Limits
        /// </summary>
        [Test]
        public void LimitsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Limits
            //Assert.IsInstanceOfType<Limits> (instance, "variable 'instance' is a Limits");
        }


        /// <summary>
        /// Test the property 'AllowPrepay'
        /// </summary>
        [Test]
        public void AllowPrepayTest()
        {
            // TODO unit test for the property 'AllowPrepay'
        }
        /// <summary>
        /// Test the property 'AuthzResourceTypes'
        /// </summary>
        [Test]
        public void AuthzResourceTypesTest()
        {
            // TODO unit test for the property 'AuthzResourceTypes'
        }
        /// <summary>
        /// Test the property 'BurstTrunks'
        /// </summary>
        [Test]
        public void BurstTrunksTest()
        {
            // TODO unit test for the property 'BurstTrunks'
        }
        /// <summary>
        /// Test the property 'Calls'
        /// </summary>
        [Test]
        public void CallsTest()
        {
            // TODO unit test for the property 'Calls'
        }
        /// <summary>
        /// Test the property 'InboundTrunks'
        /// </summary>
        [Test]
        public void InboundTrunksTest()
        {
            // TODO unit test for the property 'InboundTrunks'
        }
        /// <summary>
        /// Test the property 'OutboundTrunks'
        /// </summary>
        [Test]
        public void OutboundTrunksTest()
        {
            // TODO unit test for the property 'OutboundTrunks'
        }
        /// <summary>
        /// Test the property 'ResourceConsumingCalls'
        /// </summary>
        [Test]
        public void ResourceConsumingCallsTest()
        {
            // TODO unit test for the property 'ResourceConsumingCalls'
        }
        /// <summary>
        /// Test the property 'TwowayTrunks'
        /// </summary>
        [Test]
        public void TwowayTrunksTest()
        {
            // TODO unit test for the property 'TwowayTrunks'
        }

    }

}
