/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing SystemConfigCrossbarAuth
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class SystemConfigCrossbarAuthTests
    {
        // TODO uncomment below to declare an instance variable for SystemConfigCrossbarAuth
        //private SystemConfigCrossbarAuth instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of SystemConfigCrossbarAuth
            //instance = new SystemConfigCrossbarAuth();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SystemConfigCrossbarAuth
        /// </summary>
        [Test]
        public void SystemConfigCrossbarAuthInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" SystemConfigCrossbarAuth
            //Assert.IsInstanceOfType<SystemConfigCrossbarAuth> (instance, "variable 'instance' is a SystemConfigCrossbarAuth");
        }


        /// <summary>
        /// Test the property 'AuthModules'
        /// </summary>
        [Test]
        public void AuthModulesTest()
        {
            // TODO unit test for the property 'AuthModules'
        }
        /// <summary>
        /// Test the property 'AvailableAuthMethods'
        /// </summary>
        [Test]
        public void AvailableAuthMethodsTest()
        {
            // TODO unit test for the property 'AvailableAuthMethods'
        }
        /// <summary>
        /// Test the property 'BasicAuthType'
        /// </summary>
        [Test]
        public void BasicAuthTypeTest()
        {
            // TODO unit test for the property 'BasicAuthType'
        }
        /// <summary>
        /// Test the property 'LogFailedAttempts'
        /// </summary>
        [Test]
        public void LogFailedAttemptsTest()
        {
            // TODO unit test for the property 'LogFailedAttempts'
        }
        /// <summary>
        /// Test the property 'LogFailedLoginAttempts'
        /// </summary>
        [Test]
        public void LogFailedLoginAttemptsTest()
        {
            // TODO unit test for the property 'LogFailedLoginAttempts'
        }
        /// <summary>
        /// Test the property 'LogSuccessfulAttempts'
        /// </summary>
        [Test]
        public void LogSuccessfulAttemptsTest()
        {
            // TODO unit test for the property 'LogSuccessfulAttempts'
        }
        /// <summary>
        /// Test the property 'TokenAuthExpiryS'
        /// </summary>
        [Test]
        public void TokenAuthExpirySTest()
        {
            // TODO unit test for the property 'TokenAuthExpiryS'
        }

    }

}
