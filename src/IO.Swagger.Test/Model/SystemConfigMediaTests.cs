/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing SystemConfigMedia
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class SystemConfigMediaTests
    {
        // TODO uncomment below to declare an instance variable for SystemConfigMedia
        //private SystemConfigMedia instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of SystemConfigMedia
            //instance = new SystemConfigMedia();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SystemConfigMedia
        /// </summary>
        [Test]
        public void SystemConfigMediaInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" SystemConfigMedia
            //Assert.IsInstanceOfType<SystemConfigMedia> (instance, "variable 'instance' is a SystemConfigMedia");
        }


        /// <summary>
        /// Test the property 'AuthenticatedPlayback'
        /// </summary>
        [Test]
        public void AuthenticatedPlaybackTest()
        {
            // TODO unit test for the property 'AuthenticatedPlayback'
        }
        /// <summary>
        /// Test the property 'AuthenticatedStore'
        /// </summary>
        [Test]
        public void AuthenticatedStoreTest()
        {
            // TODO unit test for the property 'AuthenticatedStore'
        }
        /// <summary>
        /// Test the property 'CallRecording'
        /// </summary>
        [Test]
        public void CallRecordingTest()
        {
            // TODO unit test for the property 'CallRecording'
        }
        /// <summary>
        /// Test the property 'DefaultLanguage'
        /// </summary>
        [Test]
        public void DefaultLanguageTest()
        {
            // TODO unit test for the property 'DefaultLanguage'
        }
        /// <summary>
        /// Test the property 'DistributedProxy'
        /// </summary>
        [Test]
        public void DistributedProxyTest()
        {
            // TODO unit test for the property 'DistributedProxy'
        }
        /// <summary>
        /// Test the property 'FixMediaNames'
        /// </summary>
        [Test]
        public void FixMediaNamesTest()
        {
            // TODO unit test for the property 'FixMediaNames'
        }
        /// <summary>
        /// Test the property 'MaxRecordingTimeLimit'
        /// </summary>
        [Test]
        public void MaxRecordingTimeLimitTest()
        {
            // TODO unit test for the property 'MaxRecordingTimeLimit'
        }
        /// <summary>
        /// Test the property 'NormalizeDestinationArgs'
        /// </summary>
        [Test]
        public void NormalizeDestinationArgsTest()
        {
            // TODO unit test for the property 'NormalizeDestinationArgs'
        }
        /// <summary>
        /// Test the property 'NormalizeExecutable'
        /// </summary>
        [Test]
        public void NormalizeExecutableTest()
        {
            // TODO unit test for the property 'NormalizeExecutable'
        }
        /// <summary>
        /// Test the property 'NormalizeSourceArgs'
        /// </summary>
        [Test]
        public void NormalizeSourceArgsTest()
        {
            // TODO unit test for the property 'NormalizeSourceArgs'
        }
        /// <summary>
        /// Test the property 'ProxyHostname'
        /// </summary>
        [Test]
        public void ProxyHostnameTest()
        {
            // TODO unit test for the property 'ProxyHostname'
        }
        /// <summary>
        /// Test the property 'ProxyIp'
        /// </summary>
        [Test]
        public void ProxyIpTest()
        {
            // TODO unit test for the property 'ProxyIp'
        }
        /// <summary>
        /// Test the property 'ProxyListeners'
        /// </summary>
        [Test]
        public void ProxyListenersTest()
        {
            // TODO unit test for the property 'ProxyListeners'
        }
        /// <summary>
        /// Test the property 'ProxyPassword'
        /// </summary>
        [Test]
        public void ProxyPasswordTest()
        {
            // TODO unit test for the property 'ProxyPassword'
        }
        /// <summary>
        /// Test the property 'ProxyPort'
        /// </summary>
        [Test]
        public void ProxyPortTest()
        {
            // TODO unit test for the property 'ProxyPort'
        }
        /// <summary>
        /// Test the property 'ProxyStoreAcls'
        /// </summary>
        [Test]
        public void ProxyStoreAclsTest()
        {
            // TODO unit test for the property 'ProxyStoreAcls'
        }
        /// <summary>
        /// Test the property 'ProxyStoreAuthenticate'
        /// </summary>
        [Test]
        public void ProxyStoreAuthenticateTest()
        {
            // TODO unit test for the property 'ProxyStoreAuthenticate'
        }
        /// <summary>
        /// Test the property 'ProxyUsername'
        /// </summary>
        [Test]
        public void ProxyUsernameTest()
        {
            // TODO unit test for the property 'ProxyUsername'
        }
        /// <summary>
        /// Test the property 'RecordMinSec'
        /// </summary>
        [Test]
        public void RecordMinSecTest()
        {
            // TODO unit test for the property 'RecordMinSec'
        }
        /// <summary>
        /// Test the property 'SslCert'
        /// </summary>
        [Test]
        public void SslCertTest()
        {
            // TODO unit test for the property 'SslCert'
        }
        /// <summary>
        /// Test the property 'SslKey'
        /// </summary>
        [Test]
        public void SslKeyTest()
        {
            // TODO unit test for the property 'SslKey'
        }
        /// <summary>
        /// Test the property 'SslPassword'
        /// </summary>
        [Test]
        public void SslPasswordTest()
        {
            // TODO unit test for the property 'SslPassword'
        }
        /// <summary>
        /// Test the property 'SslPort'
        /// </summary>
        [Test]
        public void SslPortTest()
        {
            // TODO unit test for the property 'SslPort'
        }
        /// <summary>
        /// Test the property 'StoreRecordings'
        /// </summary>
        [Test]
        public void StoreRecordingsTest()
        {
            // TODO unit test for the property 'StoreRecordings'
        }
        /// <summary>
        /// Test the property 'SupportAccountOverrides'
        /// </summary>
        [Test]
        public void SupportAccountOverridesTest()
        {
            // TODO unit test for the property 'SupportAccountOverrides'
        }
        /// <summary>
        /// Test the property 'UseHttps'
        /// </summary>
        [Test]
        public void UseHttpsTest()
        {
            // TODO unit test for the property 'UseHttps'
        }
        /// <summary>
        /// Test the property 'UsePlaintext'
        /// </summary>
        [Test]
        public void UsePlaintextTest()
        {
            // TODO unit test for the property 'UsePlaintext'
        }
        /// <summary>
        /// Test the property 'UseSslProxy'
        /// </summary>
        [Test]
        public void UseSslProxyTest()
        {
            // TODO unit test for the property 'UseSslProxy'
        }

    }

}
