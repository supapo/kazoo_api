/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CallflowsPark
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CallflowsParkTests
    {
        // TODO uncomment below to declare an instance variable for CallflowsPark
        //private CallflowsPark instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CallflowsPark
            //instance = new CallflowsPark();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CallflowsPark
        /// </summary>
        [Test]
        public void CallflowsParkInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CallflowsPark
            //Assert.IsInstanceOfType<CallflowsPark> (instance, "variable 'instance' is a CallflowsPark");
        }


        /// <summary>
        /// Test the property 'Action'
        /// </summary>
        [Test]
        public void ActionTest()
        {
            // TODO unit test for the property 'Action'
        }
        /// <summary>
        /// Test the property 'CustomPresenceId'
        /// </summary>
        [Test]
        public void CustomPresenceIdTest()
        {
            // TODO unit test for the property 'CustomPresenceId'
        }
        /// <summary>
        /// Test the property 'DefaultCallbackTimeout'
        /// </summary>
        [Test]
        public void DefaultCallbackTimeoutTest()
        {
            // TODO unit test for the property 'DefaultCallbackTimeout'
        }
        /// <summary>
        /// Test the property 'DefaultPresenceType'
        /// </summary>
        [Test]
        public void DefaultPresenceTypeTest()
        {
            // TODO unit test for the property 'DefaultPresenceType'
        }
        /// <summary>
        /// Test the property 'DefaultRingbackTimeout'
        /// </summary>
        [Test]
        public void DefaultRingbackTimeoutTest()
        {
            // TODO unit test for the property 'DefaultRingbackTimeout'
        }
        /// <summary>
        /// Test the property 'MaxSlotNumber'
        /// </summary>
        [Test]
        public void MaxSlotNumberTest()
        {
            // TODO unit test for the property 'MaxSlotNumber'
        }
        /// <summary>
        /// Test the property 'PresenceId'
        /// </summary>
        [Test]
        public void PresenceIdTest()
        {
            // TODO unit test for the property 'PresenceId'
        }
        /// <summary>
        /// Test the property 'SkipModule'
        /// </summary>
        [Test]
        public void SkipModuleTest()
        {
            // TODO unit test for the property 'SkipModule'
        }
        /// <summary>
        /// Test the property 'Slot'
        /// </summary>
        [Test]
        public void SlotTest()
        {
            // TODO unit test for the property 'Slot'
        }
        /// <summary>
        /// Test the property 'Slots'
        /// </summary>
        [Test]
        public void SlotsTest()
        {
            // TODO unit test for the property 'Slots'
        }

    }

}
