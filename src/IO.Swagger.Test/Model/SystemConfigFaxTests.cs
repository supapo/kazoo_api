/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing SystemConfigFax
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class SystemConfigFaxTests
    {
        // TODO uncomment below to declare an instance variable for SystemConfigFax
        //private SystemConfigFax instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of SystemConfigFax
            //instance = new SystemConfigFax();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SystemConfigFax
        /// </summary>
        [Test]
        public void SystemConfigFaxInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" SystemConfigFax
            //Assert.IsInstanceOfType<SystemConfigFax> (instance, "variable 'instance' is a SystemConfigFax");
        }


        /// <summary>
        /// Test the property 'AllowAllAddressesWhenEmpty'
        /// </summary>
        [Test]
        public void AllowAllAddressesWhenEmptyTest()
        {
            // TODO unit test for the property 'AllowAllAddressesWhenEmpty'
        }
        /// <summary>
        /// Test the property 'AllowedContentTypes'
        /// </summary>
        [Test]
        public void AllowedContentTypesTest()
        {
            // TODO unit test for the property 'AllowedContentTypes'
        }
        /// <summary>
        /// Test the property 'CloudRegistrationPoolInterval'
        /// </summary>
        [Test]
        public void CloudRegistrationPoolIntervalTest()
        {
            // TODO unit test for the property 'CloudRegistrationPoolInterval'
        }
        /// <summary>
        /// Test the property 'DefaultCompareField'
        /// </summary>
        [Test]
        public void DefaultCompareFieldTest()
        {
            // TODO unit test for the property 'DefaultCompareField'
        }
        /// <summary>
        /// Test the property 'DefaultRetryCount'
        /// </summary>
        [Test]
        public void DefaultRetryCountTest()
        {
            // TODO unit test for the property 'DefaultRetryCount'
        }
        /// <summary>
        /// Test the property 'DefaultRetryPeriod'
        /// </summary>
        [Test]
        public void DefaultRetryPeriodTest()
        {
            // TODO unit test for the property 'DefaultRetryPeriod'
        }
        /// <summary>
        /// Test the property 'DefaultSmtpDomain'
        /// </summary>
        [Test]
        public void DefaultSmtpDomainTest()
        {
            // TODO unit test for the property 'DefaultSmtpDomain'
        }
        /// <summary>
        /// Test the property 'DeleteEmptyFaxes'
        /// </summary>
        [Test]
        public void DeleteEmptyFaxesTest()
        {
            // TODO unit test for the property 'DeleteEmptyFaxes'
        }
        /// <summary>
        /// Test the property 'DeniedContentTypes'
        /// </summary>
        [Test]
        public void DeniedContentTypesTest()
        {
            // TODO unit test for the property 'DeniedContentTypes'
        }
        /// <summary>
        /// Test the property 'EndpointTimeout'
        /// </summary>
        [Test]
        public void EndpointTimeoutTest()
        {
            // TODO unit test for the property 'EndpointTimeout'
        }
        /// <summary>
        /// Test the property 'EnsureValidCallerId'
        /// </summary>
        [Test]
        public void EnsureValidCallerIdTest()
        {
            // TODO unit test for the property 'EnsureValidCallerId'
        }
        /// <summary>
        /// Test the property 'FaxFilePath'
        /// </summary>
        [Test]
        public void FaxFilePathTest()
        {
            // TODO unit test for the property 'FaxFilePath'
        }
        /// <summary>
        /// Test the property 'FaxSettings'
        /// </summary>
        [Test]
        public void FaxSettingsTest()
        {
            // TODO unit test for the property 'FaxSettings'
        }
        /// <summary>
        /// Test the property 'FileCachePath'
        /// </summary>
        [Test]
        public void FileCachePathTest()
        {
            // TODO unit test for the property 'FileCachePath'
        }
        /// <summary>
        /// Test the property 'IgnoreEarlyMedia'
        /// </summary>
        [Test]
        public void IgnoreEarlyMediaTest()
        {
            // TODO unit test for the property 'IgnoreEarlyMedia'
        }
        /// <summary>
        /// Test the property 'ImageMinSize'
        /// </summary>
        [Test]
        public void ImageMinSizeTest()
        {
            // TODO unit test for the property 'ImageMinSize'
        }
        /// <summary>
        /// Test the property 'ImageSizeCmdFormat'
        /// </summary>
        [Test]
        public void ImageSizeCmdFormatTest()
        {
            // TODO unit test for the property 'ImageSizeCmdFormat'
        }
        /// <summary>
        /// Test the property 'InboundT38Default'
        /// </summary>
        [Test]
        public void InboundT38DefaultTest()
        {
            // TODO unit test for the property 'InboundT38Default'
        }
        /// <summary>
        /// Test the property 'LogFaxboxErrors'
        /// </summary>
        [Test]
        public void LogFaxboxErrorsTest()
        {
            // TODO unit test for the property 'LogFaxboxErrors'
        }
        /// <summary>
        /// Test the property 'MaxOutbound'
        /// </summary>
        [Test]
        public void MaxOutboundTest()
        {
            // TODO unit test for the property 'MaxOutbound'
        }
        /// <summary>
        /// Test the property 'MaxStorageRetry'
        /// </summary>
        [Test]
        public void MaxStorageRetryTest()
        {
            // TODO unit test for the property 'MaxStorageRetry'
        }
        /// <summary>
        /// Test the property 'Port'
        /// </summary>
        [Test]
        public void PortTest()
        {
            // TODO unit test for the property 'Port'
        }
        /// <summary>
        /// Test the property 'ReportAnonymousSystemErrors'
        /// </summary>
        [Test]
        public void ReportAnonymousSystemErrorsTest()
        {
            // TODO unit test for the property 'ReportAnonymousSystemErrors'
        }
        /// <summary>
        /// Test the property 'ReportFaxboxSystemErrors'
        /// </summary>
        [Test]
        public void ReportFaxboxSystemErrorsTest()
        {
            // TODO unit test for the property 'ReportFaxboxSystemErrors'
        }
        /// <summary>
        /// Test the property 'ReportSmtpErrors'
        /// </summary>
        [Test]
        public void ReportSmtpErrorsTest()
        {
            // TODO unit test for the property 'ReportSmtpErrors'
        }
        /// <summary>
        /// Test the property 'Reschedule'
        /// </summary>
        [Test]
        public void RescheduleTest()
        {
            // TODO unit test for the property 'Reschedule'
        }
        /// <summary>
        /// Test the property 'SerializeOutboundNumbers'
        /// </summary>
        [Test]
        public void SerializeOutboundNumbersTest()
        {
            // TODO unit test for the property 'SerializeOutboundNumbers'
        }
        /// <summary>
        /// Test the property 'SmtpMaxMsgSize'
        /// </summary>
        [Test]
        public void SmtpMaxMsgSizeTest()
        {
            // TODO unit test for the property 'SmtpMaxMsgSize'
        }
        /// <summary>
        /// Test the property 'SmtpPort'
        /// </summary>
        [Test]
        public void SmtpPortTest()
        {
            // TODO unit test for the property 'SmtpPort'
        }
        /// <summary>
        /// Test the property 'SmtpSessions'
        /// </summary>
        [Test]
        public void SmtpSessionsTest()
        {
            // TODO unit test for the property 'SmtpSessions'
        }
        /// <summary>
        /// Test the property 'StoreFaxPdf'
        /// </summary>
        [Test]
        public void StoreFaxPdfTest()
        {
            // TODO unit test for the property 'StoreFaxPdf'
        }
        /// <summary>
        /// Test the property 'StoreFaxTiff'
        /// </summary>
        [Test]
        public void StoreFaxTiffTest()
        {
            // TODO unit test for the property 'StoreFaxTiff'
        }
        /// <summary>
        /// Test the property 'StoreUrlDocument'
        /// </summary>
        [Test]
        public void StoreUrlDocumentTest()
        {
            // TODO unit test for the property 'StoreUrlDocument'
        }
        /// <summary>
        /// Test the property 'WaitForFaxTimeoutMs'
        /// </summary>
        [Test]
        public void WaitForFaxTimeoutMsTest()
        {
            // TODO unit test for the property 'WaitForFaxTimeoutMs'
        }
        /// <summary>
        /// Test the property 'Workers'
        /// </summary>
        [Test]
        public void WorkersTest()
        {
            // TODO unit test for the property 'Workers'
        }
        /// <summary>
        /// Test the property 'XmppInterval'
        /// </summary>
        [Test]
        public void XmppIntervalTest()
        {
            // TODO unit test for the property 'XmppInterval'
        }

    }

}
