/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing SystemConfigAcdc
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class SystemConfigAcdcTests
    {
        // TODO uncomment below to declare an instance variable for SystemConfigAcdc
        //private SystemConfigAcdc instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of SystemConfigAcdc
            //instance = new SystemConfigAcdc();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SystemConfigAcdc
        /// </summary>
        [Test]
        public void SystemConfigAcdcInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" SystemConfigAcdc
            //Assert.IsInstanceOfType<SystemConfigAcdc> (instance, "variable 'instance' is a SystemConfigAcdc");
        }


        /// <summary>
        /// Test the property 'AgentInfoFields'
        /// </summary>
        [Test]
        public void AgentInfoFieldsTest()
        {
            // TODO unit test for the property 'AgentInfoFields'
        }
        /// <summary>
        /// Test the property 'ArchivePeriodMs'
        /// </summary>
        [Test]
        public void ArchivePeriodMsTest()
        {
            // TODO unit test for the property 'ArchivePeriodMs'
        }
        /// <summary>
        /// Test the property 'ArchiveWindowS'
        /// </summary>
        [Test]
        public void ArchiveWindowSTest()
        {
            // TODO unit test for the property 'ArchiveWindowS'
        }
        /// <summary>
        /// Test the property 'CleanupPeriodMs'
        /// </summary>
        [Test]
        public void CleanupPeriodMsTest()
        {
            // TODO unit test for the property 'CleanupPeriodMs'
        }
        /// <summary>
        /// Test the property 'CleanupWindowS'
        /// </summary>
        [Test]
        public void CleanupWindowSTest()
        {
            // TODO unit test for the property 'CleanupWindowS'
        }
        /// <summary>
        /// Test the property 'DefaultAgentPauseTimeout'
        /// </summary>
        [Test]
        public void DefaultAgentPauseTimeoutTest()
        {
            // TODO unit test for the property 'DefaultAgentPauseTimeout'
        }
        /// <summary>
        /// Test the property 'MaxConnectFailures'
        /// </summary>
        [Test]
        public void MaxConnectFailuresTest()
        {
            // TODO unit test for the property 'MaxConnectFailures'
        }
        /// <summary>
        /// Test the property 'MaxResultSet'
        /// </summary>
        [Test]
        public void MaxResultSetTest()
        {
            // TODO unit test for the property 'MaxResultSet'
        }
        /// <summary>
        /// Test the property 'QueueCollectRespTimeout'
        /// </summary>
        [Test]
        public void QueueCollectRespTimeoutTest()
        {
            // TODO unit test for the property 'QueueCollectRespTimeout'
        }
        /// <summary>
        /// Test the property 'QueueWorkerCount'
        /// </summary>
        [Test]
        public void QueueWorkerCountTest()
        {
            // TODO unit test for the property 'QueueWorkerCount'
        }
        /// <summary>
        /// Test the property 'StatsQueryLimitsEnabled'
        /// </summary>
        [Test]
        public void StatsQueryLimitsEnabledTest()
        {
            // TODO unit test for the property 'StatsQueryLimitsEnabled'
        }

    }

}
