/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing KapiRouteResp
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class KapiRouteRespTests
    {
        // TODO uncomment below to declare an instance variable for KapiRouteResp
        //private KapiRouteResp instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of KapiRouteResp
            //instance = new KapiRouteResp();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of KapiRouteResp
        /// </summary>
        [Test]
        public void KapiRouteRespInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" KapiRouteResp
            //Assert.IsInstanceOfType<KapiRouteResp> (instance, "variable 'instance' is a KapiRouteResp");
        }


        /// <summary>
        /// Test the property 'ApplicationData'
        /// </summary>
        [Test]
        public void ApplicationDataTest()
        {
            // TODO unit test for the property 'ApplicationData'
        }
        /// <summary>
        /// Test the property 'CustomApplicationVars'
        /// </summary>
        [Test]
        public void CustomApplicationVarsTest()
        {
            // TODO unit test for the property 'CustomApplicationVars'
        }
        /// <summary>
        /// Test the property 'CustomChannelVars'
        /// </summary>
        [Test]
        public void CustomChannelVarsTest()
        {
            // TODO unit test for the property 'CustomChannelVars'
        }
        /// <summary>
        /// Test the property 'EventCategory'
        /// </summary>
        [Test]
        public void EventCategoryTest()
        {
            // TODO unit test for the property 'EventCategory'
        }
        /// <summary>
        /// Test the property 'EventName'
        /// </summary>
        [Test]
        public void EventNameTest()
        {
            // TODO unit test for the property 'EventName'
        }
        /// <summary>
        /// Test the property 'FromRealm'
        /// </summary>
        [Test]
        public void FromRealmTest()
        {
            // TODO unit test for the property 'FromRealm'
        }
        /// <summary>
        /// Test the property 'FromURI'
        /// </summary>
        [Test]
        public void FromURITest()
        {
            // TODO unit test for the property 'FromURI'
        }
        /// <summary>
        /// Test the property 'FromUser'
        /// </summary>
        [Test]
        public void FromUserTest()
        {
            // TODO unit test for the property 'FromUser'
        }
        /// <summary>
        /// Test the property 'Method'
        /// </summary>
        [Test]
        public void MethodTest()
        {
            // TODO unit test for the property 'Method'
        }
        /// <summary>
        /// Test the property 'PlanData'
        /// </summary>
        [Test]
        public void PlanDataTest()
        {
            // TODO unit test for the property 'PlanData'
        }
        /// <summary>
        /// Test the property 'PrePark'
        /// </summary>
        [Test]
        public void PreParkTest()
        {
            // TODO unit test for the property 'PrePark'
        }
        /// <summary>
        /// Test the property 'RingbackMedia'
        /// </summary>
        [Test]
        public void RingbackMediaTest()
        {
            // TODO unit test for the property 'RingbackMedia'
        }
        /// <summary>
        /// Test the property 'RouteErrorCode'
        /// </summary>
        [Test]
        public void RouteErrorCodeTest()
        {
            // TODO unit test for the property 'RouteErrorCode'
        }
        /// <summary>
        /// Test the property 'RouteErrorMessage'
        /// </summary>
        [Test]
        public void RouteErrorMessageTest()
        {
            // TODO unit test for the property 'RouteErrorMessage'
        }
        /// <summary>
        /// Test the property 'Routes'
        /// </summary>
        [Test]
        public void RoutesTest()
        {
            // TODO unit test for the property 'Routes'
        }
        /// <summary>
        /// Test the property 'TransferMedia'
        /// </summary>
        [Test]
        public void TransferMediaTest()
        {
            // TODO unit test for the property 'TransferMedia'
        }

    }

}
