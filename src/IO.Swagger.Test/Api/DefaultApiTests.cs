/* 
 * Crossbar
 *
 * The Crossbar APIs
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        
        /// <summary>
        /// Test AboutGet
        /// </summary>
        [Test]
        public void AboutGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AboutGet();
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAccessListsDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAccessListsDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAccessListsDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAccessListsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAccessListsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAccessListsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAccessListsPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAccessListsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AccessLists accessLists = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAccessListsPost(accessLists, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAcdcCallStatsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAcdcCallStatsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAcdcCallStatsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAclsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAclsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAclsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAgentsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAgentsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAgentsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAgentsStatsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAgentsStatsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAgentsStatsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAgentsStatusGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAgentsStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAgentsStatusGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAgentsStatusUSERIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAgentsStatusUSERIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDAgentsStatusUSERIDGet(xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAgentsStatusUSERIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAgentsStatusUSERIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDAgentsStatusUSERIDPost(xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAgentsUSERIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAgentsUSERIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDAgentsUSERIDGet(xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAgentsUSERIDQueueStatusGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAgentsUSERIDQueueStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDAgentsUSERIDQueueStatusGet(xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAgentsUSERIDQueueStatusPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAgentsUSERIDQueueStatusPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDAgentsUSERIDQueueStatusPost(xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAgentsUSERIDStatusGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAgentsUSERIDStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDAgentsUSERIDStatusGet(xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAgentsUSERIDStatusPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAgentsUSERIDStatusPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDAgentsUSERIDStatusPost(xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAlertsALERTIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAlertsALERTIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string ALERT_ID = null;
            //instance.AccountsACCOUNTIDAlertsALERTIDDelete(xAuthToken, ACCOUNT_ID, ALERT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAlertsALERTIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAlertsALERTIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string ALERT_ID = null;
            //instance.AccountsACCOUNTIDAlertsALERTIDGet(xAuthToken, ACCOUNT_ID, ALERT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAlertsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAlertsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAlertsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAlertsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAlertsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAlertsPut(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAllotmentsConsumedGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAllotmentsConsumedGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAllotmentsConsumedGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAllotmentsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAllotmentsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAllotmentsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAllotmentsPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAllotmentsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Allotments allotments = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAllotmentsPost(allotments, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDApiKeyGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDApiKeyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDApiKeyGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDApiKeyPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDApiKeyPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Accounts accounts = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDApiKeyPut(accounts, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAppsLinkAuthorizeGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAppsLinkAuthorizeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAppsLinkAuthorizeGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAppsStoreAPPIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAppsStoreAPPIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string APP_ID = null;
            //instance.AccountsACCOUNTIDAppsStoreAPPIDDelete(xAuthToken, ACCOUNT_ID, APP_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAppsStoreAPPIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAppsStoreAPPIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string APP_ID = null;
            //instance.AccountsACCOUNTIDAppsStoreAPPIDGet(xAuthToken, ACCOUNT_ID, APP_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAppsStoreAPPIDIconGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAppsStoreAPPIDIconGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string APP_ID = null;
            //instance.AccountsACCOUNTIDAppsStoreAPPIDIconGet(xAuthToken, ACCOUNT_ID, APP_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAppsStoreAPPIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAppsStoreAPPIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string APP_ID = null;
            //instance.AccountsACCOUNTIDAppsStoreAPPIDPost(xAuthToken, ACCOUNT_ID, APP_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAppsStoreAPPIDPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAppsStoreAPPIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string APP_ID = null;
            //instance.AccountsACCOUNTIDAppsStoreAPPIDPut(xAuthToken, ACCOUNT_ID, APP_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAppsStoreAPPIDScreenshotAPPSCREENSHOTINDEXGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAppsStoreAPPIDScreenshotAPPSCREENSHOTINDEXGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string APP_ID = null;
            //string APP_SCREENSHOT_INDEX = null;
            //instance.AccountsACCOUNTIDAppsStoreAPPIDScreenshotAPPSCREENSHOTINDEXGet(xAuthToken, ACCOUNT_ID, APP_ID, APP_SCREENSHOT_INDEX);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAppsStoreBlacklistGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAppsStoreBlacklistGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAppsStoreBlacklistGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAppsStoreBlacklistPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAppsStoreBlacklistPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAppsStoreBlacklistPost(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAppsStoreGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAppsStoreGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAppsStoreGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAttHandlersErrorsERRORIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAttHandlersErrorsERRORIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string ERROR_ID = null;
            //instance.AccountsACCOUNTIDAttHandlersErrorsERRORIDGet(xAuthToken, ACCOUNT_ID, ERROR_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAttHandlersErrorsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAttHandlersErrorsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDAttHandlersErrorsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDAttHandlersErrorsHandlerHANDLERIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDAttHandlersErrorsHandlerHANDLERIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string HANDLER_ID = null;
            //instance.AccountsACCOUNTIDAttHandlersErrorsHandlerHANDLERIDGet(xAuthToken, ACCOUNT_ID, HANDLER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDBlacklistsBLACKLISTIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDBlacklistsBLACKLISTIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string BLACKLIST_ID = null;
            //instance.AccountsACCOUNTIDBlacklistsBLACKLISTIDDelete(xAuthToken, ACCOUNT_ID, BLACKLIST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDBlacklistsBLACKLISTIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDBlacklistsBLACKLISTIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string BLACKLIST_ID = null;
            //instance.AccountsACCOUNTIDBlacklistsBLACKLISTIDGet(xAuthToken, ACCOUNT_ID, BLACKLIST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDBlacklistsBLACKLISTIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDBlacklistsBLACKLISTIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string BLACKLIST_ID = null;
            //instance.AccountsACCOUNTIDBlacklistsBLACKLISTIDPatch(xAuthToken, ACCOUNT_ID, BLACKLIST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDBlacklistsBLACKLISTIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDBlacklistsBLACKLISTIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Blacklists blacklists = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string BLACKLIST_ID = null;
            //instance.AccountsACCOUNTIDBlacklistsBLACKLISTIDPost(blacklists, xAuthToken, ACCOUNT_ID, BLACKLIST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDBlacklistsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDBlacklistsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDBlacklistsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDBlacklistsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDBlacklistsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Blacklists blacklists = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDBlacklistsPut(blacklists, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDBulkDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDBulkDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDBulkDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDBulkGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDBulkGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDBulkGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDBulkPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDBulkPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDBulkPost(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCallInspectorCALLIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCallInspectorCALLIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CALL_ID = null;
            //instance.AccountsACCOUNTIDCallInspectorCALLIDGet(xAuthToken, ACCOUNT_ID, CALL_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCallInspectorGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCallInspectorGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDCallInspectorGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCallflowsCALLFLOWIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCallflowsCALLFLOWIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CALLFLOW_ID = null;
            //instance.AccountsACCOUNTIDCallflowsCALLFLOWIDDelete(xAuthToken, ACCOUNT_ID, CALLFLOW_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCallflowsCALLFLOWIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCallflowsCALLFLOWIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CALLFLOW_ID = null;
            //instance.AccountsACCOUNTIDCallflowsCALLFLOWIDGet(xAuthToken, ACCOUNT_ID, CALLFLOW_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCallflowsCALLFLOWIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCallflowsCALLFLOWIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CALLFLOW_ID = null;
            //instance.AccountsACCOUNTIDCallflowsCALLFLOWIDPatch(xAuthToken, ACCOUNT_ID, CALLFLOW_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCallflowsCALLFLOWIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCallflowsCALLFLOWIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Callflows callflows = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CALLFLOW_ID = null;
            //instance.AccountsACCOUNTIDCallflowsCALLFLOWIDPost(callflows, xAuthToken, ACCOUNT_ID, CALLFLOW_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCallflowsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCallflowsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDCallflowsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCallflowsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCallflowsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Callflows callflows = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDCallflowsPut(callflows, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCccpsCCCPIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCccpsCCCPIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CCCP_ID = null;
            //instance.AccountsACCOUNTIDCccpsCCCPIDDelete(xAuthToken, ACCOUNT_ID, CCCP_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCccpsCCCPIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCccpsCCCPIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CCCP_ID = null;
            //instance.AccountsACCOUNTIDCccpsCCCPIDGet(xAuthToken, ACCOUNT_ID, CCCP_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCccpsCCCPIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCccpsCCCPIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Cccps cccps = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CCCP_ID = null;
            //instance.AccountsACCOUNTIDCccpsCCCPIDPost(cccps, xAuthToken, ACCOUNT_ID, CCCP_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCccpsCCCPIDPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCccpsCCCPIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Cccps cccps = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CCCP_ID = null;
            //instance.AccountsACCOUNTIDCccpsCCCPIDPut(cccps, xAuthToken, ACCOUNT_ID, CCCP_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCccpsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCccpsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDCccpsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCccpsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCccpsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Cccps cccps = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDCccpsPut(cccps, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCdrsCDRIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCdrsCDRIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CDR_ID = null;
            //instance.AccountsACCOUNTIDCdrsCDRIDGet(xAuthToken, ACCOUNT_ID, CDR_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCdrsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCdrsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDCdrsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCdrsInteractionGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCdrsInteractionGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDCdrsInteractionGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCdrsLegsINTERACTIONIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCdrsLegsINTERACTIONIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string INTERACTION_ID = null;
            //instance.AccountsACCOUNTIDCdrsLegsINTERACTIONIDGet(xAuthToken, ACCOUNT_ID, INTERACTION_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCdrsSummaryGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCdrsSummaryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDCdrsSummaryGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDChannelsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDChannelsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDChannelsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDChannelsUUIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDChannelsUUIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string UUID = null;
            //instance.AccountsACCOUNTIDChannelsUUIDGet(xAuthToken, ACCOUNT_ID, UUID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDChannelsUUIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDChannelsUUIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string UUID = null;
            //instance.AccountsACCOUNTIDChannelsUUIDPost(xAuthToken, ACCOUNT_ID, UUID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDChannelsUUIDPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDChannelsUUIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string UUID = null;
            //instance.AccountsACCOUNTIDChannelsUUIDPut(xAuthToken, ACCOUNT_ID, UUID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDChildrenGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDChildrenGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDChildrenGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDClicktocallC2CIDConnectGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDClicktocallC2CIDConnectGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ACCOUNT_ID = null;
            //string c2CID = null;
            //string xAuthToken = null;
            //instance.AccountsACCOUNTIDClicktocallC2CIDConnectGet(ACCOUNT_ID, c2CID, xAuthToken);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDClicktocallC2CIDConnectPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDClicktocallC2CIDConnectPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Clicktocall clicktocall = null;
            //string ACCOUNT_ID = null;
            //string c2CID = null;
            //string xAuthToken = null;
            //instance.AccountsACCOUNTIDClicktocallC2CIDConnectPost(clicktocall, ACCOUNT_ID, c2CID, xAuthToken);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDClicktocallC2CIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDClicktocallC2CIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string c2CID = null;
            //instance.AccountsACCOUNTIDClicktocallC2CIDDelete(xAuthToken, ACCOUNT_ID, c2CID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDClicktocallC2CIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDClicktocallC2CIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string c2CID = null;
            //instance.AccountsACCOUNTIDClicktocallC2CIDGet(xAuthToken, ACCOUNT_ID, c2CID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDClicktocallC2CIDHistoryGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDClicktocallC2CIDHistoryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string c2CID = null;
            //instance.AccountsACCOUNTIDClicktocallC2CIDHistoryGet(xAuthToken, ACCOUNT_ID, c2CID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDClicktocallC2CIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDClicktocallC2CIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string c2CID = null;
            //instance.AccountsACCOUNTIDClicktocallC2CIDPatch(xAuthToken, ACCOUNT_ID, c2CID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDClicktocallC2CIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDClicktocallC2CIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Clicktocall clicktocall = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string c2CID = null;
            //instance.AccountsACCOUNTIDClicktocallC2CIDPost(clicktocall, xAuthToken, ACCOUNT_ID, c2CID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDClicktocallGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDClicktocallGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDClicktocallGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDClicktocallPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDClicktocallPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Clicktocall clicktocall = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDClicktocallPut(clicktocall, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCommentsCOMMENTIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCommentsCOMMENTIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string COMMENT_ID = null;
            //instance.AccountsACCOUNTIDCommentsCOMMENTIDDelete(xAuthToken, ACCOUNT_ID, COMMENT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCommentsCOMMENTIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCommentsCOMMENTIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string COMMENT_ID = null;
            //instance.AccountsACCOUNTIDCommentsCOMMENTIDGet(xAuthToken, ACCOUNT_ID, COMMENT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCommentsCOMMENTIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCommentsCOMMENTIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Comments comments = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string COMMENT_ID = null;
            //instance.AccountsACCOUNTIDCommentsCOMMENTIDPost(comments, xAuthToken, ACCOUNT_ID, COMMENT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCommentsDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCommentsDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDCommentsDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCommentsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCommentsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDCommentsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDCommentsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDCommentsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Comments comments = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDCommentsPut(comments, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConferencesCONFERENCEIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConferencesCONFERENCEIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFERENCE_ID = null;
            //instance.AccountsACCOUNTIDConferencesCONFERENCEIDDelete(xAuthToken, ACCOUNT_ID, CONFERENCE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConferencesCONFERENCEIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConferencesCONFERENCEIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFERENCE_ID = null;
            //instance.AccountsACCOUNTIDConferencesCONFERENCEIDGet(xAuthToken, ACCOUNT_ID, CONFERENCE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConferencesCONFERENCEIDParticipantsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConferencesCONFERENCEIDParticipantsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFERENCE_ID = null;
            //instance.AccountsACCOUNTIDConferencesCONFERENCEIDParticipantsGet(xAuthToken, ACCOUNT_ID, CONFERENCE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConferencesCONFERENCEIDParticipantsPARTICIPANTIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConferencesCONFERENCEIDParticipantsPARTICIPANTIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFERENCE_ID = null;
            //string PARTICIPANT_ID = null;
            //instance.AccountsACCOUNTIDConferencesCONFERENCEIDParticipantsPARTICIPANTIDGet(xAuthToken, ACCOUNT_ID, CONFERENCE_ID, PARTICIPANT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConferencesCONFERENCEIDParticipantsPARTICIPANTIDPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConferencesCONFERENCEIDParticipantsPARTICIPANTIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Conferences conferences = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFERENCE_ID = null;
            //string PARTICIPANT_ID = null;
            //instance.AccountsACCOUNTIDConferencesCONFERENCEIDParticipantsPARTICIPANTIDPut(conferences, xAuthToken, ACCOUNT_ID, CONFERENCE_ID, PARTICIPANT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConferencesCONFERENCEIDParticipantsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConferencesCONFERENCEIDParticipantsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Conferences conferences = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFERENCE_ID = null;
            //instance.AccountsACCOUNTIDConferencesCONFERENCEIDParticipantsPut(conferences, xAuthToken, ACCOUNT_ID, CONFERENCE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConferencesCONFERENCEIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConferencesCONFERENCEIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFERENCE_ID = null;
            //instance.AccountsACCOUNTIDConferencesCONFERENCEIDPatch(xAuthToken, ACCOUNT_ID, CONFERENCE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConferencesCONFERENCEIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConferencesCONFERENCEIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Conferences conferences = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFERENCE_ID = null;
            //instance.AccountsACCOUNTIDConferencesCONFERENCEIDPost(conferences, xAuthToken, ACCOUNT_ID, CONFERENCE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConferencesCONFERENCEIDPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConferencesCONFERENCEIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Conferences conferences = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFERENCE_ID = null;
            //instance.AccountsACCOUNTIDConferencesCONFERENCEIDPut(conferences, xAuthToken, ACCOUNT_ID, CONFERENCE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConferencesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConferencesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDConferencesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConferencesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConferencesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Conferences conferences = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDConferencesPut(conferences, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConfigsCONFIGIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConfigsCONFIGIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFIG_ID = null;
            //instance.AccountsACCOUNTIDConfigsCONFIGIDDelete(xAuthToken, ACCOUNT_ID, CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConfigsCONFIGIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConfigsCONFIGIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFIG_ID = null;
            //instance.AccountsACCOUNTIDConfigsCONFIGIDGet(xAuthToken, ACCOUNT_ID, CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConfigsCONFIGIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConfigsCONFIGIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFIG_ID = null;
            //instance.AccountsACCOUNTIDConfigsCONFIGIDPatch(xAuthToken, ACCOUNT_ID, CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConfigsCONFIGIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConfigsCONFIGIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFIG_ID = null;
            //instance.AccountsACCOUNTIDConfigsCONFIGIDPost(xAuthToken, ACCOUNT_ID, CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConfigsCONFIGIDPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConfigsCONFIGIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFIG_ID = null;
            //instance.AccountsACCOUNTIDConfigsCONFIGIDPut(xAuthToken, ACCOUNT_ID, CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConnectivityCONNECTIVITYIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConnectivityCONNECTIVITYIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONNECTIVITY_ID = null;
            //instance.AccountsACCOUNTIDConnectivityCONNECTIVITYIDDelete(xAuthToken, ACCOUNT_ID, CONNECTIVITY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConnectivityCONNECTIVITYIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConnectivityCONNECTIVITYIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONNECTIVITY_ID = null;
            //instance.AccountsACCOUNTIDConnectivityCONNECTIVITYIDGet(xAuthToken, ACCOUNT_ID, CONNECTIVITY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConnectivityCONNECTIVITYIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConnectivityCONNECTIVITYIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONNECTIVITY_ID = null;
            //instance.AccountsACCOUNTIDConnectivityCONNECTIVITYIDPatch(xAuthToken, ACCOUNT_ID, CONNECTIVITY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConnectivityCONNECTIVITYIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConnectivityCONNECTIVITYIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Connectivity connectivity = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONNECTIVITY_ID = null;
            //instance.AccountsACCOUNTIDConnectivityCONNECTIVITYIDPost(connectivity, xAuthToken, ACCOUNT_ID, CONNECTIVITY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConnectivityGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConnectivityGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDConnectivityGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDConnectivityPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDConnectivityPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Connectivity connectivity = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDConnectivityPut(connectivity, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDContactListGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDContactListGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDContactListGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDDelete(ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDescendantsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDescendantsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDDescendantsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDevicesDEVICEIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDevicesDEVICEIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string DEVICE_ID = null;
            //instance.AccountsACCOUNTIDDevicesDEVICEIDDelete(xAuthToken, ACCOUNT_ID, DEVICE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDevicesDEVICEIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDevicesDEVICEIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string DEVICE_ID = null;
            //instance.AccountsACCOUNTIDDevicesDEVICEIDGet(xAuthToken, ACCOUNT_ID, DEVICE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDevicesDEVICEIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDevicesDEVICEIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string DEVICE_ID = null;
            //instance.AccountsACCOUNTIDDevicesDEVICEIDPatch(xAuthToken, ACCOUNT_ID, DEVICE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDevicesDEVICEIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDevicesDEVICEIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Devices devices = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string DEVICE_ID = null;
            //instance.AccountsACCOUNTIDDevicesDEVICEIDPost(devices, xAuthToken, ACCOUNT_ID, DEVICE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDevicesDEVICEIDPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDevicesDEVICEIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Devices devices = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string DEVICE_ID = null;
            //instance.AccountsACCOUNTIDDevicesDEVICEIDPut(devices, xAuthToken, ACCOUNT_ID, DEVICE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDevicesDEVICEIDSyncPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDevicesDEVICEIDSyncPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Devices devices = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string DEVICE_ID = null;
            //instance.AccountsACCOUNTIDDevicesDEVICEIDSyncPost(devices, xAuthToken, ACCOUNT_ID, DEVICE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDevicesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDevicesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDDevicesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDevicesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDevicesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Devices devices = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDDevicesPut(devices, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDevicesStatusGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDevicesStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDDevicesStatusGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDialplansGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDialplansGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDDialplansGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDirectoriesDIRECTORYIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDirectoriesDIRECTORYIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string DIRECTORY_ID = null;
            //instance.AccountsACCOUNTIDDirectoriesDIRECTORYIDDelete(xAuthToken, ACCOUNT_ID, DIRECTORY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDirectoriesDIRECTORYIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDirectoriesDIRECTORYIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string DIRECTORY_ID = null;
            //instance.AccountsACCOUNTIDDirectoriesDIRECTORYIDGet(xAuthToken, ACCOUNT_ID, DIRECTORY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDirectoriesDIRECTORYIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDirectoriesDIRECTORYIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string DIRECTORY_ID = null;
            //instance.AccountsACCOUNTIDDirectoriesDIRECTORYIDPatch(xAuthToken, ACCOUNT_ID, DIRECTORY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDirectoriesDIRECTORYIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDirectoriesDIRECTORYIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Directories directories = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string DIRECTORY_ID = null;
            //instance.AccountsACCOUNTIDDirectoriesDIRECTORYIDPost(directories, xAuthToken, ACCOUNT_ID, DIRECTORY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDirectoriesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDirectoriesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDDirectoriesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDDirectoriesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDDirectoriesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Directories directories = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDDirectoriesPut(directories, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDENDPOINTTYPEENDPOINTIDQuickcallNUMBERGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDENDPOINTTYPEENDPOINTIDQuickcallNUMBERGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string ENDPOINT_TYPE = null;
            //string ENDPOINT_ID = null;
            //string NUMBER = null;
            //instance.AccountsACCOUNTIDENDPOINTTYPEENDPOINTIDQuickcallNUMBERGet(xAuthToken, ACCOUNT_ID, ENDPOINT_TYPE, ENDPOINT_ID, NUMBER);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDENDPOINTTYPEENDPOINTIDQuickcallNUMBERPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDENDPOINTTYPEENDPOINTIDQuickcallNUMBERPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string ENDPOINT_TYPE = null;
            //string ENDPOINT_ID = null;
            //string NUMBER = null;
            //instance.AccountsACCOUNTIDENDPOINTTYPEENDPOINTIDQuickcallNUMBERPost(xAuthToken, ACCOUNT_ID, ENDPOINT_TYPE, ENDPOINT_ID, NUMBER);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxboxesFAXBOXIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxboxesFAXBOXIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAXBOX_ID = null;
            //instance.AccountsACCOUNTIDFaxboxesFAXBOXIDDelete(xAuthToken, ACCOUNT_ID, FAXBOX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxboxesFAXBOXIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxboxesFAXBOXIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAXBOX_ID = null;
            //instance.AccountsACCOUNTIDFaxboxesFAXBOXIDGet(xAuthToken, ACCOUNT_ID, FAXBOX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxboxesFAXBOXIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxboxesFAXBOXIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAXBOX_ID = null;
            //instance.AccountsACCOUNTIDFaxboxesFAXBOXIDPatch(xAuthToken, ACCOUNT_ID, FAXBOX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxboxesFAXBOXIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxboxesFAXBOXIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAXBOX_ID = null;
            //instance.AccountsACCOUNTIDFaxboxesFAXBOXIDPost(xAuthToken, ACCOUNT_ID, FAXBOX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxboxesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxboxesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDFaxboxesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxboxesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxboxesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDFaxboxesPut(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesInboxFAXIDAttachmentDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesInboxFAXIDAttachmentDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAX_ID = null;
            //instance.AccountsACCOUNTIDFaxesInboxFAXIDAttachmentDelete(xAuthToken, ACCOUNT_ID, FAX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesInboxFAXIDAttachmentGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesInboxFAXIDAttachmentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAX_ID = null;
            //instance.AccountsACCOUNTIDFaxesInboxFAXIDAttachmentGet(xAuthToken, ACCOUNT_ID, FAX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesInboxFAXIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesInboxFAXIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAX_ID = null;
            //instance.AccountsACCOUNTIDFaxesInboxFAXIDDelete(xAuthToken, ACCOUNT_ID, FAX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesInboxFAXIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesInboxFAXIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAX_ID = null;
            //instance.AccountsACCOUNTIDFaxesInboxFAXIDGet(xAuthToken, ACCOUNT_ID, FAX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesInboxFAXIDPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesInboxFAXIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Faxes faxes = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAX_ID = null;
            //instance.AccountsACCOUNTIDFaxesInboxFAXIDPut(faxes, xAuthToken, ACCOUNT_ID, FAX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesInboxGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesInboxGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDFaxesInboxGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesIncomingFAXIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesIncomingFAXIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAX_ID = null;
            //instance.AccountsACCOUNTIDFaxesIncomingFAXIDGet(xAuthToken, ACCOUNT_ID, FAX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesIncomingGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesIncomingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDFaxesIncomingGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesOutboxFAXIDAttachmentDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesOutboxFAXIDAttachmentDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAX_ID = null;
            //instance.AccountsACCOUNTIDFaxesOutboxFAXIDAttachmentDelete(xAuthToken, ACCOUNT_ID, FAX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesOutboxFAXIDAttachmentGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesOutboxFAXIDAttachmentGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAX_ID = null;
            //instance.AccountsACCOUNTIDFaxesOutboxFAXIDAttachmentGet(xAuthToken, ACCOUNT_ID, FAX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesOutboxFAXIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesOutboxFAXIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAX_ID = null;
            //instance.AccountsACCOUNTIDFaxesOutboxFAXIDDelete(xAuthToken, ACCOUNT_ID, FAX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesOutboxFAXIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesOutboxFAXIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAX_ID = null;
            //instance.AccountsACCOUNTIDFaxesOutboxFAXIDGet(xAuthToken, ACCOUNT_ID, FAX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesOutboxFAXIDPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesOutboxFAXIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Faxes faxes = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAX_ID = null;
            //instance.AccountsACCOUNTIDFaxesOutboxFAXIDPut(faxes, xAuthToken, ACCOUNT_ID, FAX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesOutboxGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesOutboxGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDFaxesOutboxGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesOutgoingFAXJOBIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesOutgoingFAXJOBIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string FAX_JOB_ID = null;
            //instance.AccountsACCOUNTIDFaxesOutgoingFAXJOBIDGet(xAuthToken, ACCOUNT_ID, FAX_JOB_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesOutgoingGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesOutgoingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDFaxesOutgoingGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesOutgoingPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesOutgoingPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Faxes faxes = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDFaxesOutgoingPut(faxes, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Faxes faxes = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDFaxesPut(faxes, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesSmtplogATTEMPTIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesSmtplogATTEMPTIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string ATTEMPT_ID = null;
            //instance.AccountsACCOUNTIDFaxesSmtplogATTEMPTIDGet(xAuthToken, ACCOUNT_ID, ATTEMPT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFaxesSmtplogGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFaxesSmtplogGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDFaxesSmtplogGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDFreeswitchGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDFreeswitchGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDFreeswitchGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDGet(ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGlobalProvisionerTemplatesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGlobalProvisionerTemplatesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDGlobalProvisionerTemplatesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGlobalProvisionerTemplatesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGlobalProvisionerTemplatesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDGlobalProvisionerTemplatesPut(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDDelete(xAuthToken, ACCOUNT_ID, TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDGet(xAuthToken, ACCOUNT_ID, TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDImageDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDImageDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDImageDelete(xAuthToken, ACCOUNT_ID, TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDImageGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDImageGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDImageGet(xAuthToken, ACCOUNT_ID, TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDImagePost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDImagePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDImagePost(xAuthToken, ACCOUNT_ID, TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDGlobalProvisionerTemplatesTEMPLATEIDPost(xAuthToken, ACCOUNT_ID, TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGroupsGROUPIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGroupsGROUPIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string GROUP_ID = null;
            //instance.AccountsACCOUNTIDGroupsGROUPIDDelete(xAuthToken, ACCOUNT_ID, GROUP_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGroupsGROUPIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGroupsGROUPIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string GROUP_ID = null;
            //instance.AccountsACCOUNTIDGroupsGROUPIDGet(xAuthToken, ACCOUNT_ID, GROUP_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGroupsGROUPIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGroupsGROUPIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string GROUP_ID = null;
            //instance.AccountsACCOUNTIDGroupsGROUPIDPatch(xAuthToken, ACCOUNT_ID, GROUP_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGroupsGROUPIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGroupsGROUPIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Groups groups = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string GROUP_ID = null;
            //instance.AccountsACCOUNTIDGroupsGROUPIDPost(groups, xAuthToken, ACCOUNT_ID, GROUP_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGroupsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGroupsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDGroupsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDGroupsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDGroupsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Groups groups = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDGroupsPut(groups, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDHotdesksGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDHotdesksGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDHotdesksGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDIpsAssignedGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDIpsAssignedGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDIpsAssignedGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDIpsDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDIpsDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDIpsDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDIpsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDIpsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDIpsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDIpsHostsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDIpsHostsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDIpsHostsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDIpsIPADDRESSDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDIpsIPADDRESSDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string IP_ADDRESS = null;
            //instance.AccountsACCOUNTIDIpsIPADDRESSDelete(xAuthToken, ACCOUNT_ID, IP_ADDRESS);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDIpsIPADDRESSGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDIpsIPADDRESSGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string IP_ADDRESS = null;
            //instance.AccountsACCOUNTIDIpsIPADDRESSGet(xAuthToken, ACCOUNT_ID, IP_ADDRESS);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDIpsIPADDRESSPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDIpsIPADDRESSPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Ips ips = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string IP_ADDRESS = null;
            //instance.AccountsACCOUNTIDIpsIPADDRESSPost(ips, xAuthToken, ACCOUNT_ID, IP_ADDRESS);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDIpsPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDIpsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Ips ips = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDIpsPost(ips, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDIpsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDIpsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Ips ips = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDIpsPut(ips, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDIpsZonesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDIpsZonesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDIpsZonesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLedgersAvailableGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLedgersAvailableGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDLedgersAvailableGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLedgersCreditPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLedgersCreditPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Ledgers ledgers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDLedgersCreditPut(ledgers, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLedgersDebitPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLedgersDebitPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Ledgers ledgers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDLedgersDebitPut(ledgers, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLedgersGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLedgersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDLedgersGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLedgersSOURCESERVICEGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLedgersSOURCESERVICEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string SOURCE_SERVICE = null;
            //instance.AccountsACCOUNTIDLedgersSOURCESERVICEGet(xAuthToken, ACCOUNT_ID, SOURCE_SERVICE);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLedgersSOURCESERVICELEDGERIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLedgersSOURCESERVICELEDGERIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string SOURCE_SERVICE = null;
            //string LEDGER_ID = null;
            //instance.AccountsACCOUNTIDLedgersSOURCESERVICELEDGERIDGet(xAuthToken, ACCOUNT_ID, SOURCE_SERVICE, LEDGER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLedgersSummaryMODBSUFFIXGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLedgersSummaryMODBSUFFIXGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string MODB_SUFFIX = null;
            //instance.AccountsACCOUNTIDLedgersSummaryMODBSUFFIXGet(xAuthToken, ACCOUNT_ID, MODB_SUFFIX);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLedgersTotalGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLedgersTotalGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDLedgersTotalGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLimitsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLimitsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDLimitsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLimitsPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLimitsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Limits limits = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDLimitsPost(limits, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDListsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsLISTIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsLISTIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LIST_ID = null;
            //instance.AccountsACCOUNTIDListsLISTIDDelete(xAuthToken, ACCOUNT_ID, LIST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsLISTIDEntriesDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsLISTIDEntriesDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LIST_ID = null;
            //instance.AccountsACCOUNTIDListsLISTIDEntriesDelete(xAuthToken, ACCOUNT_ID, LIST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsLISTIDEntriesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsLISTIDEntriesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LIST_ID = null;
            //instance.AccountsACCOUNTIDListsLISTIDEntriesGet(xAuthToken, ACCOUNT_ID, LIST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LIST_ID = null;
            //string LIST_ENTRY_ID = null;
            //instance.AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDDelete(xAuthToken, ACCOUNT_ID, LIST_ID, LIST_ENTRY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LIST_ID = null;
            //string LIST_ENTRY_ID = null;
            //instance.AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDGet(xAuthToken, ACCOUNT_ID, LIST_ID, LIST_ENTRY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LIST_ID = null;
            //string LIST_ENTRY_ID = null;
            //instance.AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDPatch(xAuthToken, ACCOUNT_ID, LIST_ID, LIST_ENTRY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDPhotoPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDPhotoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Lists lists = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LIST_ID = null;
            //string LIST_ENTRY_ID = null;
            //instance.AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDPhotoPost(lists, xAuthToken, ACCOUNT_ID, LIST_ID, LIST_ENTRY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Lists lists = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LIST_ID = null;
            //string LIST_ENTRY_ID = null;
            //instance.AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDPost(lists, xAuthToken, ACCOUNT_ID, LIST_ID, LIST_ENTRY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDVcardGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDVcardGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LIST_ID = null;
            //string LIST_ENTRY_ID = null;
            //instance.AccountsACCOUNTIDListsLISTIDEntriesLISTENTRYIDVcardGet(xAuthToken, ACCOUNT_ID, LIST_ID, LIST_ENTRY_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsLISTIDEntriesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsLISTIDEntriesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Lists lists = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LIST_ID = null;
            //instance.AccountsACCOUNTIDListsLISTIDEntriesPut(lists, xAuthToken, ACCOUNT_ID, LIST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsLISTIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsLISTIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LIST_ID = null;
            //instance.AccountsACCOUNTIDListsLISTIDGet(xAuthToken, ACCOUNT_ID, LIST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsLISTIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsLISTIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LIST_ID = null;
            //instance.AccountsACCOUNTIDListsLISTIDPatch(xAuthToken, ACCOUNT_ID, LIST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsLISTIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsLISTIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Lists lists = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LIST_ID = null;
            //instance.AccountsACCOUNTIDListsLISTIDPost(lists, xAuthToken, ACCOUNT_ID, LIST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDListsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDListsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Lists lists = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDListsPut(lists, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLocalProvisionerTemplatesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLocalProvisionerTemplatesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDLocalProvisionerTemplatesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLocalProvisionerTemplatesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLocalProvisionerTemplatesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDLocalProvisionerTemplatesPut(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDDelete(xAuthToken, ACCOUNT_ID, TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDGet(xAuthToken, ACCOUNT_ID, TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDImageDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDImageDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDImageDelete(xAuthToken, ACCOUNT_ID, TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDImageGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDImageGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDImageGet(xAuthToken, ACCOUNT_ID, TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDImagePost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDImagePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDImagePost(xAuthToken, ACCOUNT_ID, TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDLocalProvisionerTemplatesTEMPLATEIDPost(xAuthToken, ACCOUNT_ID, TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMediaGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMediaGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMediaGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMediaLanguagesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMediaLanguagesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMediaLanguagesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMediaLanguagesLANGUAGEGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMediaLanguagesLANGUAGEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string LANGUAGE = null;
            //instance.AccountsACCOUNTIDMediaLanguagesLANGUAGEGet(xAuthToken, ACCOUNT_ID, LANGUAGE);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMediaMEDIAIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMediaMEDIAIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string MEDIA_ID = null;
            //instance.AccountsACCOUNTIDMediaMEDIAIDDelete(xAuthToken, ACCOUNT_ID, MEDIA_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMediaMEDIAIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMediaMEDIAIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string MEDIA_ID = null;
            //instance.AccountsACCOUNTIDMediaMEDIAIDGet(xAuthToken, ACCOUNT_ID, MEDIA_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMediaMEDIAIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMediaMEDIAIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Media media = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string MEDIA_ID = null;
            //instance.AccountsACCOUNTIDMediaMEDIAIDPost(media, xAuthToken, ACCOUNT_ID, MEDIA_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMediaMEDIAIDRawGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMediaMEDIAIDRawGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string MEDIA_ID = null;
            //instance.AccountsACCOUNTIDMediaMEDIAIDRawGet(xAuthToken, ACCOUNT_ID, MEDIA_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMediaMEDIAIDRawPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMediaMEDIAIDRawPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Media media = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string MEDIA_ID = null;
            //instance.AccountsACCOUNTIDMediaMEDIAIDRawPost(media, xAuthToken, ACCOUNT_ID, MEDIA_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMediaPromptsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMediaPromptsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMediaPromptsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMediaPromptsPROMPTIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMediaPromptsPROMPTIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PROMPT_ID = null;
            //instance.AccountsACCOUNTIDMediaPromptsPROMPTIDGet(xAuthToken, ACCOUNT_ID, PROMPT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMediaPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMediaPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Media media = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMediaPut(media, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMenusGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMenusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMenusGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMenusMENUIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMenusMENUIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string MENU_ID = null;
            //instance.AccountsACCOUNTIDMenusMENUIDDelete(xAuthToken, ACCOUNT_ID, MENU_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMenusMENUIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMenusMENUIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string MENU_ID = null;
            //instance.AccountsACCOUNTIDMenusMENUIDGet(xAuthToken, ACCOUNT_ID, MENU_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMenusMENUIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMenusMENUIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string MENU_ID = null;
            //instance.AccountsACCOUNTIDMenusMENUIDPatch(xAuthToken, ACCOUNT_ID, MENU_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMenusMENUIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMenusMENUIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Menus menus = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string MENU_ID = null;
            //instance.AccountsACCOUNTIDMenusMENUIDPost(menus, xAuthToken, ACCOUNT_ID, MENU_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMenusPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMenusPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Menus menus = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMenusPut(menus, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMetaflowsDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMetaflowsDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMetaflowsDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMetaflowsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMetaflowsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMetaflowsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMetaflowsPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMetaflowsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Metaflows metaflows = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMetaflowsPost(metaflows, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMigrationsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMigrationsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMigrationsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMigrationsMIGRATIONIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMigrationsMIGRATIONIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string MIGRATION_ID = null;
            //instance.AccountsACCOUNTIDMigrationsMIGRATIONIDGet(xAuthToken, ACCOUNT_ID, MIGRATION_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMigrationsMIGRATIONIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMigrationsMIGRATIONIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string MIGRATION_ID = null;
            //instance.AccountsACCOUNTIDMigrationsMIGRATIONIDPost(xAuthToken, ACCOUNT_ID, MIGRATION_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMovePost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMovePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Accounts accounts = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMovePost(accounts, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMultiFactorAttemptsATTEMPTIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMultiFactorAttemptsATTEMPTIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string ATTEMPT_ID = null;
            //instance.AccountsACCOUNTIDMultiFactorAttemptsATTEMPTIDGet(xAuthToken, ACCOUNT_ID, ATTEMPT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMultiFactorAttemptsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMultiFactorAttemptsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMultiFactorAttemptsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMultiFactorCONFIGIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMultiFactorCONFIGIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFIG_ID = null;
            //instance.AccountsACCOUNTIDMultiFactorCONFIGIDDelete(xAuthToken, ACCOUNT_ID, CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMultiFactorCONFIGIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMultiFactorCONFIGIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFIG_ID = null;
            //instance.AccountsACCOUNTIDMultiFactorCONFIGIDGet(xAuthToken, ACCOUNT_ID, CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMultiFactorCONFIGIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMultiFactorCONFIGIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFIG_ID = null;
            //instance.AccountsACCOUNTIDMultiFactorCONFIGIDPatch(xAuthToken, ACCOUNT_ID, CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMultiFactorCONFIGIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMultiFactorCONFIGIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string CONFIG_ID = null;
            //instance.AccountsACCOUNTIDMultiFactorCONFIGIDPost(xAuthToken, ACCOUNT_ID, CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMultiFactorGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMultiFactorGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMultiFactorGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDMultiFactorPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDMultiFactorPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDMultiFactorPut(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDNotificationsCustomerUpdateMessagePost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDNotificationsCustomerUpdateMessagePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Notifications notifications = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDNotificationsCustomerUpdateMessagePost(notifications, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDNotificationsDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDNotificationsDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDNotificationsDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDNotificationsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDNotificationsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDNotificationsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDNotificationsNOTIFICATIONIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDNotificationsNOTIFICATIONIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string NOTIFICATION_ID = null;
            //instance.AccountsACCOUNTIDNotificationsNOTIFICATIONIDDelete(xAuthToken, ACCOUNT_ID, NOTIFICATION_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDNotificationsNOTIFICATIONIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDNotificationsNOTIFICATIONIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string NOTIFICATION_ID = null;
            //instance.AccountsACCOUNTIDNotificationsNOTIFICATIONIDGet(xAuthToken, ACCOUNT_ID, NOTIFICATION_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDNotificationsNOTIFICATIONIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDNotificationsNOTIFICATIONIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Notifications notifications = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string NOTIFICATION_ID = null;
            //instance.AccountsACCOUNTIDNotificationsNOTIFICATIONIDPost(notifications, xAuthToken, ACCOUNT_ID, NOTIFICATION_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDNotificationsNOTIFICATIONIDPreviewPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDNotificationsNOTIFICATIONIDPreviewPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Notifications notifications = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string NOTIFICATION_ID = null;
            //instance.AccountsACCOUNTIDNotificationsNOTIFICATIONIDPreviewPost(notifications, xAuthToken, ACCOUNT_ID, NOTIFICATION_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDNotificationsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDNotificationsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Notifications notifications = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDNotificationsPut(notifications, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDNotificationsSmtplogGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDNotificationsSmtplogGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDNotificationsSmtplogGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDNotificationsSmtplogSMTPLOGIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDNotificationsSmtplogSMTPLOGIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string SMTP_LOG_ID = null;
            //instance.AccountsACCOUNTIDNotificationsSmtplogSMTPLOGIDGet(xAuthToken, ACCOUNT_ID, SMTP_LOG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDOnboardPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDOnboardPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDOnboardPut(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDParentsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDParentsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDParentsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDParkedCallsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDParkedCallsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDParkedCallsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPatch(ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersCarriersInfoGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersCarriersInfoGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPhoneNumbersCarriersInfoGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersCheckPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersCheckPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PhoneNumbers phoneNumbers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPhoneNumbersCheckPost(phoneNumbers, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersClassifiersGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersClassifiersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPhoneNumbersClassifiersGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersClassifiersPHONENUMBERGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersClassifiersPHONENUMBERGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PHONE_NUMBER = null;
            //instance.AccountsACCOUNTIDPhoneNumbersClassifiersPHONENUMBERGet(xAuthToken, ACCOUNT_ID, PHONE_NUMBER);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersCollectionActivatePut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersCollectionActivatePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PhoneNumbers phoneNumbers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPhoneNumbersCollectionActivatePut(phoneNumbers, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersCollectionDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersCollectionDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPhoneNumbersCollectionDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersCollectionPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersCollectionPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPhoneNumbersCollectionPatch(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersCollectionPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersCollectionPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PhoneNumbers phoneNumbers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPhoneNumbersCollectionPost(phoneNumbers, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersCollectionPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersCollectionPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PhoneNumbers phoneNumbers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPhoneNumbersCollectionPut(phoneNumbers, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersFixPHONENUMBERPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersFixPHONENUMBERPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PhoneNumbers phoneNumbers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PHONE_NUMBER = null;
            //instance.AccountsACCOUNTIDPhoneNumbersFixPHONENUMBERPost(phoneNumbers, xAuthToken, ACCOUNT_ID, PHONE_NUMBER);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersFixPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersFixPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PhoneNumbers phoneNumbers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPhoneNumbersFixPost(phoneNumbers, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPhoneNumbersGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersLocalityPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersLocalityPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PhoneNumbers phoneNumbers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPhoneNumbersLocalityPost(phoneNumbers, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersPHONENUMBERActivatePut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersPHONENUMBERActivatePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PhoneNumbers phoneNumbers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PHONE_NUMBER = null;
            //instance.AccountsACCOUNTIDPhoneNumbersPHONENUMBERActivatePut(phoneNumbers, xAuthToken, ACCOUNT_ID, PHONE_NUMBER);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersPHONENUMBERDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersPHONENUMBERDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PHONE_NUMBER = null;
            //instance.AccountsACCOUNTIDPhoneNumbersPHONENUMBERDelete(xAuthToken, ACCOUNT_ID, PHONE_NUMBER);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersPHONENUMBERGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersPHONENUMBERGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PHONE_NUMBER = null;
            //instance.AccountsACCOUNTIDPhoneNumbersPHONENUMBERGet(xAuthToken, ACCOUNT_ID, PHONE_NUMBER);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersPHONENUMBERIdentifyGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersPHONENUMBERIdentifyGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PHONE_NUMBER = null;
            //instance.AccountsACCOUNTIDPhoneNumbersPHONENUMBERIdentifyGet(xAuthToken, ACCOUNT_ID, PHONE_NUMBER);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersPHONENUMBERPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersPHONENUMBERPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PHONE_NUMBER = null;
            //instance.AccountsACCOUNTIDPhoneNumbersPHONENUMBERPatch(xAuthToken, ACCOUNT_ID, PHONE_NUMBER);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersPHONENUMBERPortPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersPHONENUMBERPortPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PhoneNumbers phoneNumbers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PHONE_NUMBER = null;
            //instance.AccountsACCOUNTIDPhoneNumbersPHONENUMBERPortPut(phoneNumbers, xAuthToken, ACCOUNT_ID, PHONE_NUMBER);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersPHONENUMBERPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersPHONENUMBERPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PhoneNumbers phoneNumbers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PHONE_NUMBER = null;
            //instance.AccountsACCOUNTIDPhoneNumbersPHONENUMBERPost(phoneNumbers, xAuthToken, ACCOUNT_ID, PHONE_NUMBER);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersPHONENUMBERPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersPHONENUMBERPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PhoneNumbers phoneNumbers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PHONE_NUMBER = null;
            //instance.AccountsACCOUNTIDPhoneNumbersPHONENUMBERPut(phoneNumbers, xAuthToken, ACCOUNT_ID, PHONE_NUMBER);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersPHONENUMBERReservePut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersPHONENUMBERReservePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PhoneNumbers phoneNumbers = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PHONE_NUMBER = null;
            //instance.AccountsACCOUNTIDPhoneNumbersPHONENUMBERReservePut(phoneNumbers, xAuthToken, ACCOUNT_ID, PHONE_NUMBER);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPhoneNumbersPrefixGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPhoneNumbersPrefixGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPhoneNumbersPrefixGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPivotDebugGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPivotDebugGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPivotDebugGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPivotDebugUUIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPivotDebugUUIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string UUID = null;
            //instance.AccountsACCOUNTIDPivotDebugUUIDGet(xAuthToken, ACCOUNT_ID, UUID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsLastSubmittedGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsLastSubmittedGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsLastSubmittedGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsATTACHMENTIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsATTACHMENTIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //string ATTACHMENT_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsATTACHMENTIDDelete(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID, ATTACHMENT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsATTACHMENTIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsATTACHMENTIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //string ATTACHMENT_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsATTACHMENTIDGet(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID, ATTACHMENT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsATTACHMENTIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsATTACHMENTIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PortRequests portRequests = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //string ATTACHMENT_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsATTACHMENTIDPost(portRequests, xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID, ATTACHMENT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsGet(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PortRequests portRequests = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDAttachmentsPut(portRequests, xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDCanceledPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDCanceledPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDCanceledPatch(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDCompletedPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDCompletedPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDCompletedPatch(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDDelete(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDGet(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDLoaGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDLoaGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDLoaGet(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDPatch(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDPendingPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDPendingPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDPendingPatch(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PortRequests portRequests = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDPost(portRequests, xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDRejectedPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDRejectedPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDRejectedPatch(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDScheduledPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDScheduledPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDScheduledPatch(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDSubmittedPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDSubmittedPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDSubmittedPatch(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPORTREQUESTIDTimelineGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPORTREQUESTIDTimelineGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PORT_REQUEST_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPORTREQUESTIDTimelineGet(xAuthToken, ACCOUNT_ID, PORT_REQUEST_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPortRequestsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPortRequestsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PortRequests portRequests = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPortRequestsPut(portRequests, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Accounts accounts = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPost(accounts, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPresenceEXTENSIONGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPresenceEXTENSIONGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string EXTENSION = null;
            //instance.AccountsACCOUNTIDPresenceEXTENSIONGet(xAuthToken, ACCOUNT_ID, EXTENSION);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPresenceEXTENSIONPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPresenceEXTENSIONPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string EXTENSION = null;
            //instance.AccountsACCOUNTIDPresenceEXTENSIONPost(xAuthToken, ACCOUNT_ID, EXTENSION);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPresenceGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPresenceGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPresenceGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPresencePost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPresencePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPresencePost(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPresenceReportREPORTIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPresenceReportREPORTIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string REPORT_ID = null;
            //instance.AccountsACCOUNTIDPresenceReportREPORTIDGet(xAuthToken, ACCOUNT_ID, REPORT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Accounts accounts = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDPut(accounts, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDQueuesEavesdropPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDQueuesEavesdropPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Queues queues = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDQueuesEavesdropPut(queues, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDQueuesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDQueuesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDQueuesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDQueuesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDQueuesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Queues queues = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDQueuesPut(queues, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDQueuesQUEUEIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDQueuesQUEUEIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string QUEUE_ID = null;
            //instance.AccountsACCOUNTIDQueuesQUEUEIDDelete(xAuthToken, ACCOUNT_ID, QUEUE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDQueuesQUEUEIDEavesdropPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDQueuesQUEUEIDEavesdropPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Queues queues = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string QUEUE_ID = null;
            //instance.AccountsACCOUNTIDQueuesQUEUEIDEavesdropPut(queues, xAuthToken, ACCOUNT_ID, QUEUE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDQueuesQUEUEIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDQueuesQUEUEIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string QUEUE_ID = null;
            //instance.AccountsACCOUNTIDQueuesQUEUEIDGet(xAuthToken, ACCOUNT_ID, QUEUE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDQueuesQUEUEIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDQueuesQUEUEIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string QUEUE_ID = null;
            //instance.AccountsACCOUNTIDQueuesQUEUEIDPatch(xAuthToken, ACCOUNT_ID, QUEUE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDQueuesQUEUEIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDQueuesQUEUEIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Queues queues = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string QUEUE_ID = null;
            //instance.AccountsACCOUNTIDQueuesQUEUEIDPost(queues, xAuthToken, ACCOUNT_ID, QUEUE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDQueuesQUEUEIDRosterDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDQueuesQUEUEIDRosterDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string QUEUE_ID = null;
            //instance.AccountsACCOUNTIDQueuesQUEUEIDRosterDelete(xAuthToken, ACCOUNT_ID, QUEUE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDQueuesQUEUEIDRosterGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDQueuesQUEUEIDRosterGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string QUEUE_ID = null;
            //instance.AccountsACCOUNTIDQueuesQUEUEIDRosterGet(xAuthToken, ACCOUNT_ID, QUEUE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDQueuesQUEUEIDRosterPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDQueuesQUEUEIDRosterPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Queues queues = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string QUEUE_ID = null;
            //instance.AccountsACCOUNTIDQueuesQUEUEIDRosterPost(queues, xAuthToken, ACCOUNT_ID, QUEUE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDQueuesStatsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDQueuesStatsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDQueuesStatsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDRateLimitsDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDRateLimitsDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDRateLimitsDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDRateLimitsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDRateLimitsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDRateLimitsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDRateLimitsPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDRateLimitsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDRateLimitsPost(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDRecordingsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDRecordingsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDRecordingsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDRecordingsRECORDINGIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDRecordingsRECORDINGIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string RECORDING_ID = null;
            //instance.AccountsACCOUNTIDRecordingsRECORDINGIDDelete(xAuthToken, ACCOUNT_ID, RECORDING_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDRecordingsRECORDINGIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDRecordingsRECORDINGIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string RECORDING_ID = null;
            //instance.AccountsACCOUNTIDRecordingsRECORDINGIDGet(xAuthToken, ACCOUNT_ID, RECORDING_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDRegistrationsCountGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDRegistrationsCountGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDRegistrationsCountGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDRegistrationsDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDRegistrationsDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDRegistrationsDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDRegistrationsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDRegistrationsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDRegistrationsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDRegistrationsUSERNAMEDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDRegistrationsUSERNAMEDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USERNAME = null;
            //instance.AccountsACCOUNTIDRegistrationsUSERNAMEDelete(xAuthToken, ACCOUNT_ID, USERNAME);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResellerDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResellerDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResellerDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResellerPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResellerPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Accounts accounts = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResellerPut(accounts, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceSelectorsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceSelectorsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResourceSelectorsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceSelectorsNameGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceSelectorsNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResourceSelectorsNameGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceSelectorsNameSELECTORNAMEGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceSelectorsNameSELECTORNAMEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string SELECTOR_NAME = null;
            //instance.AccountsACCOUNTIDResourceSelectorsNameSELECTORNAMEGet(xAuthToken, ACCOUNT_ID, SELECTOR_NAME);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceSelectorsNameSELECTORNAMEResourceRESOURCEIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceSelectorsNameSELECTORNAMEResourceRESOURCEIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string SELECTOR_NAME = null;
            //string RESOURCE_ID = null;
            //instance.AccountsACCOUNTIDResourceSelectorsNameSELECTORNAMEResourceRESOURCEIDGet(xAuthToken, ACCOUNT_ID, SELECTOR_NAME, RESOURCE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceSelectorsResourceGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceSelectorsResourceGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResourceSelectorsResourceGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceSelectorsResourceRESOURCEIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceSelectorsResourceRESOURCEIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string RESOURCE_ID = null;
            //instance.AccountsACCOUNTIDResourceSelectorsResourceRESOURCEIDGet(xAuthToken, ACCOUNT_ID, RESOURCE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceSelectorsResourceRESOURCEIDNameSELECTORNAMEGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceSelectorsResourceRESOURCEIDNameSELECTORNAMEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string RESOURCE_ID = null;
            //string SELECTOR_NAME = null;
            //instance.AccountsACCOUNTIDResourceSelectorsResourceRESOURCEIDNameSELECTORNAMEGet(xAuthToken, ACCOUNT_ID, RESOURCE_ID, SELECTOR_NAME);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceSelectorsRulesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceSelectorsRulesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResourceSelectorsRulesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceSelectorsRulesPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceSelectorsRulesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ResourceSelectors resourceSelectors = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResourceSelectorsRulesPost(resourceSelectors, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceSelectorsUUIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceSelectorsUUIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string UUID = null;
            //instance.AccountsACCOUNTIDResourceSelectorsUUIDDelete(xAuthToken, ACCOUNT_ID, UUID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceSelectorsUUIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceSelectorsUUIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string UUID = null;
            //instance.AccountsACCOUNTIDResourceSelectorsUUIDGet(xAuthToken, ACCOUNT_ID, UUID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceSelectorsUUIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceSelectorsUUIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ResourceSelectors resourceSelectors = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string UUID = null;
            //instance.AccountsACCOUNTIDResourceSelectorsUUIDPost(resourceSelectors, xAuthToken, ACCOUNT_ID, UUID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceTemplatesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceTemplatesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResourceTemplatesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceTemplatesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceTemplatesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResourceTemplatesPut(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceTemplatesRESOURCETEMPLATEIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceTemplatesRESOURCETEMPLATEIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string RESOURCE_TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDResourceTemplatesRESOURCETEMPLATEIDDelete(xAuthToken, ACCOUNT_ID, RESOURCE_TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceTemplatesRESOURCETEMPLATEIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceTemplatesRESOURCETEMPLATEIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string RESOURCE_TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDResourceTemplatesRESOURCETEMPLATEIDGet(xAuthToken, ACCOUNT_ID, RESOURCE_TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceTemplatesRESOURCETEMPLATEIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceTemplatesRESOURCETEMPLATEIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string RESOURCE_TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDResourceTemplatesRESOURCETEMPLATEIDPatch(xAuthToken, ACCOUNT_ID, RESOURCE_TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourceTemplatesRESOURCETEMPLATEIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourceTemplatesRESOURCETEMPLATEIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string RESOURCE_TEMPLATE_ID = null;
            //instance.AccountsACCOUNTIDResourceTemplatesRESOURCETEMPLATEIDPost(xAuthToken, ACCOUNT_ID, RESOURCE_TEMPLATE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourcesCollectionPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourcesCollectionPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Resources resources = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResourcesCollectionPost(resources, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourcesCollectionPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourcesCollectionPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Resources resources = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResourcesCollectionPut(resources, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourcesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourcesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResourcesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourcesJobsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourcesJobsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResourcesJobsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourcesJobsJOBIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourcesJobsJOBIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string JOB_ID = null;
            //instance.AccountsACCOUNTIDResourcesJobsJOBIDGet(xAuthToken, ACCOUNT_ID, JOB_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourcesJobsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourcesJobsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Resources resources = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResourcesJobsPut(resources, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourcesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourcesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Resources resources = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDResourcesPut(resources, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourcesRESOURCEIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourcesRESOURCEIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string RESOURCE_ID = null;
            //instance.AccountsACCOUNTIDResourcesRESOURCEIDDelete(xAuthToken, ACCOUNT_ID, RESOURCE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourcesRESOURCEIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourcesRESOURCEIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string RESOURCE_ID = null;
            //instance.AccountsACCOUNTIDResourcesRESOURCEIDGet(xAuthToken, ACCOUNT_ID, RESOURCE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourcesRESOURCEIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourcesRESOURCEIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string RESOURCE_ID = null;
            //instance.AccountsACCOUNTIDResourcesRESOURCEIDPatch(xAuthToken, ACCOUNT_ID, RESOURCE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDResourcesRESOURCEIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDResourcesRESOURCEIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Resources resources = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string RESOURCE_ID = null;
            //instance.AccountsACCOUNTIDResourcesRESOURCEIDPost(resources, xAuthToken, ACCOUNT_ID, RESOURCE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSearchGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSearchGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDSearchGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSearchMultiGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSearchMultiGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDSearchMultiGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSecurityAttemptsATTEMPTIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSecurityAttemptsATTEMPTIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string ATTEMPT_ID = null;
            //instance.AccountsACCOUNTIDSecurityAttemptsATTEMPTIDGet(xAuthToken, ACCOUNT_ID, ATTEMPT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSecurityAttemptsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSecurityAttemptsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDSecurityAttemptsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSecurityDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSecurityDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDSecurityDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSecurityGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSecurityGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDSecurityGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSecurityPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSecurityPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDSecurityPatch(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSecurityPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSecurityPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDSecurityPost(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesAuditAUDITIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesAuditAUDITIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string AUDIT_ID = null;
            //instance.AccountsACCOUNTIDServicesAuditAUDITIDGet(xAuthToken, ACCOUNT_ID, AUDIT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesAuditGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesAuditGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesAuditGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesAuditSummaryGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesAuditSummaryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesAuditSummaryGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesAuditSummarySOURCESERVICEGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesAuditSummarySOURCESERVICEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string SOURCE_SERVICE = null;
            //instance.AccountsACCOUNTIDServicesAuditSummarySOURCESERVICEGet(xAuthToken, ACCOUNT_ID, SOURCE_SERVICE);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesAvailableGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesAvailableGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesAvailableGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesEditableGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesEditableGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesEditableGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesManualGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesManualGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesManualGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesManualPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesManualPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesManualPatch(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesManualPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesManualPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesManualPost(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesOverridesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesOverridesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesOverridesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesOverridesPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesOverridesPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesOverridesPatch(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesOverridesPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesOverridesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesOverridesPost(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesPLANIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesPLANIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PLAN_ID = null;
            //instance.AccountsACCOUNTIDServicesPLANIDDelete(xAuthToken, ACCOUNT_ID, PLAN_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesPLANIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesPLANIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string PLAN_ID = null;
            //instance.AccountsACCOUNTIDServicesPLANIDPost(xAuthToken, ACCOUNT_ID, PLAN_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesPost(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesQuotePost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesQuotePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesQuotePost(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesReconciliationPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesReconciliationPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesReconciliationPost(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesSummaryGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesSummaryGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesSummaryGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesSynchronizationPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesSynchronizationPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesSynchronizationPost(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDServicesTopupPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDServicesTopupPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDServicesTopupPost(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSiblingsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSiblingsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDSiblingsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSkelsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSkelsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDSkelsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSkelsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSkelsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDSkelsPut(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSkelsTHINGDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSkelsTHINGDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string THING = null;
            //instance.AccountsACCOUNTIDSkelsTHINGDelete(xAuthToken, ACCOUNT_ID, THING);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSkelsTHINGGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSkelsTHINGGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string THING = null;
            //instance.AccountsACCOUNTIDSkelsTHINGGet(xAuthToken, ACCOUNT_ID, THING);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSkelsTHINGPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSkelsTHINGPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string THING = null;
            //instance.AccountsACCOUNTIDSkelsTHINGPatch(xAuthToken, ACCOUNT_ID, THING);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSkelsTHINGPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSkelsTHINGPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string THING = null;
            //instance.AccountsACCOUNTIDSkelsTHINGPost(xAuthToken, ACCOUNT_ID, THING);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSmsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSmsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDSmsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSmsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSmsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Sms sms = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDSmsPut(sms, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSmsSMSIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSmsSMSIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string SMS_ID = null;
            //instance.AccountsACCOUNTIDSmsSMSIDDelete(xAuthToken, ACCOUNT_ID, SMS_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDSmsSMSIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDSmsSMSIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string SMS_ID = null;
            //instance.AccountsACCOUNTIDSmsSMSIDGet(xAuthToken, ACCOUNT_ID, SMS_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDStorageDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDStorageDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDStorageDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDStorageGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDStorageGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDStorageGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDStoragePatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDStoragePatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDStoragePatch(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDStoragePlansGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDStoragePlansGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDStoragePlansGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDStoragePlansPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDStoragePlansPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Storage storage = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDStoragePlansPut(storage, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDStoragePlansSTORAGEPLANIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDStoragePlansSTORAGEPLANIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string STORAGE_PLAN_ID = null;
            //instance.AccountsACCOUNTIDStoragePlansSTORAGEPLANIDDelete(xAuthToken, ACCOUNT_ID, STORAGE_PLAN_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDStoragePlansSTORAGEPLANIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDStoragePlansSTORAGEPLANIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string STORAGE_PLAN_ID = null;
            //instance.AccountsACCOUNTIDStoragePlansSTORAGEPLANIDGet(xAuthToken, ACCOUNT_ID, STORAGE_PLAN_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDStoragePlansSTORAGEPLANIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDStoragePlansSTORAGEPLANIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string STORAGE_PLAN_ID = null;
            //instance.AccountsACCOUNTIDStoragePlansSTORAGEPLANIDPatch(xAuthToken, ACCOUNT_ID, STORAGE_PLAN_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDStoragePlansSTORAGEPLANIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDStoragePlansSTORAGEPLANIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Storage storage = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string STORAGE_PLAN_ID = null;
            //instance.AccountsACCOUNTIDStoragePlansSTORAGEPLANIDPost(storage, xAuthToken, ACCOUNT_ID, STORAGE_PLAN_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDStoragePost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDStoragePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Storage storage = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDStoragePost(storage, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDStoragePut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDStoragePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Storage storage = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDStoragePut(storage, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTasksGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTasksGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDTasksGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTasksPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTasksPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Tasks tasks = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDTasksPut(tasks, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTasksTASKIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTasksTASKIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TASK_ID = null;
            //instance.AccountsACCOUNTIDTasksTASKIDDelete(xAuthToken, ACCOUNT_ID, TASK_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTasksTASKIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTasksTASKIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TASK_ID = null;
            //instance.AccountsACCOUNTIDTasksTASKIDGet(xAuthToken, ACCOUNT_ID, TASK_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTasksTASKIDInputGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTasksTASKIDInputGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TASK_ID = null;
            //instance.AccountsACCOUNTIDTasksTASKIDInputGet(xAuthToken, ACCOUNT_ID, TASK_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTasksTASKIDOutputGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTasksTASKIDOutputGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TASK_ID = null;
            //instance.AccountsACCOUNTIDTasksTASKIDOutputGet(xAuthToken, ACCOUNT_ID, TASK_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTasksTASKIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTasksTASKIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TASK_ID = null;
            //instance.AccountsACCOUNTIDTasksTASKIDPatch(xAuthToken, ACCOUNT_ID, TASK_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTasksTASKIDStopPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTasksTASKIDStopPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TASK_ID = null;
            //instance.AccountsACCOUNTIDTasksTASKIDStopPatch(xAuthToken, ACCOUNT_ID, TASK_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTemporalRulesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTemporalRulesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDTemporalRulesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTemporalRulesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTemporalRulesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TemporalRules temporalRules = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDTemporalRulesPut(temporalRules, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTemporalRulesSetsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTemporalRulesSetsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDTemporalRulesSetsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTemporalRulesSetsPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTemporalRulesSetsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TemporalRulesSets temporalRulesSets = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDTemporalRulesSetsPut(temporalRulesSets, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTemporalRulesSetsTEMPORALRULESETDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTemporalRulesSetsTEMPORALRULESETDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPORAL_RULE_SET = null;
            //instance.AccountsACCOUNTIDTemporalRulesSetsTEMPORALRULESETDelete(xAuthToken, ACCOUNT_ID, TEMPORAL_RULE_SET);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTemporalRulesSetsTEMPORALRULESETGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTemporalRulesSetsTEMPORALRULESETGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPORAL_RULE_SET = null;
            //instance.AccountsACCOUNTIDTemporalRulesSetsTEMPORALRULESETGet(xAuthToken, ACCOUNT_ID, TEMPORAL_RULE_SET);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTemporalRulesSetsTEMPORALRULESETPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTemporalRulesSetsTEMPORALRULESETPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPORAL_RULE_SET = null;
            //instance.AccountsACCOUNTIDTemporalRulesSetsTEMPORALRULESETPatch(xAuthToken, ACCOUNT_ID, TEMPORAL_RULE_SET);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTemporalRulesSetsTEMPORALRULESETPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTemporalRulesSetsTEMPORALRULESETPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TemporalRulesSets temporalRulesSets = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPORAL_RULE_SET = null;
            //instance.AccountsACCOUNTIDTemporalRulesSetsTEMPORALRULESETPost(temporalRulesSets, xAuthToken, ACCOUNT_ID, TEMPORAL_RULE_SET);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTemporalRulesTEMPORALRULEIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTemporalRulesTEMPORALRULEIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPORAL_RULE_ID = null;
            //instance.AccountsACCOUNTIDTemporalRulesTEMPORALRULEIDDelete(xAuthToken, ACCOUNT_ID, TEMPORAL_RULE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTemporalRulesTEMPORALRULEIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTemporalRulesTEMPORALRULEIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPORAL_RULE_ID = null;
            //instance.AccountsACCOUNTIDTemporalRulesTEMPORALRULEIDGet(xAuthToken, ACCOUNT_ID, TEMPORAL_RULE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTemporalRulesTEMPORALRULEIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTemporalRulesTEMPORALRULEIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPORAL_RULE_ID = null;
            //instance.AccountsACCOUNTIDTemporalRulesTEMPORALRULEIDPatch(xAuthToken, ACCOUNT_ID, TEMPORAL_RULE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTemporalRulesTEMPORALRULEIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTemporalRulesTEMPORALRULEIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TemporalRules temporalRules = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TEMPORAL_RULE_ID = null;
            //instance.AccountsACCOUNTIDTemporalRulesTEMPORALRULEIDPost(temporalRules, xAuthToken, ACCOUNT_ID, TEMPORAL_RULE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTokenRestrictionsDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTokenRestrictionsDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDTokenRestrictionsDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTokenRestrictionsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTokenRestrictionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDTokenRestrictionsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTokenRestrictionsPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTokenRestrictionsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TokenRestrictions tokenRestrictions = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDTokenRestrictionsPost(tokenRestrictions, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTransactionsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTransactionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDTransactionsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTransactionsRefundPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTransactionsRefundPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDTransactionsRefundPut(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTransactionsSalePut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTransactionsSalePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDTransactionsSalePut(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTransactionsTRANSACTIONIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTransactionsTRANSACTIONIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string TRANSACTION_ID = null;
            //instance.AccountsACCOUNTIDTransactionsTRANSACTIONIDGet(xAuthToken, ACCOUNT_ID, TRANSACTION_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDTreeGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDTreeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDTreeGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDUsersGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDUsersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDUsersGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDUsersPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDUsersPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Users users = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDUsersPut(users, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDUsersUSERIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDUsersUSERIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDUsersUSERIDDelete(xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDUsersUSERIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDUsersUSERIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDUsersUSERIDGet(xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDUsersUSERIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDUsersUSERIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDUsersUSERIDPatch(xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDUsersUSERIDPhotoDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDUsersUSERIDPhotoDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDUsersUSERIDPhotoDelete(xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDUsersUSERIDPhotoGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDUsersUSERIDPhotoGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDUsersUSERIDPhotoGet(xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDUsersUSERIDPhotoPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDUsersUSERIDPhotoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Users users = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDUsersUSERIDPhotoPost(users, xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDUsersUSERIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDUsersUSERIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Users users = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDUsersUSERIDPost(users, xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDUsersUSERIDVcardGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDUsersUSERIDVcardGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string USER_ID = null;
            //instance.AccountsACCOUNTIDUsersUSERIDVcardGet(xAuthToken, ACCOUNT_ID, USER_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDVmboxesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesMessagesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesMessagesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDVmboxesMessagesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Vmboxes vmboxes = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDVmboxesPut(vmboxes, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDDelete(xAuthToken, ACCOUNT_ID, VM_BOX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDGet(xAuthToken, ACCOUNT_ID, VM_BOX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDMessagesDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDMessagesDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDMessagesDelete(xAuthToken, ACCOUNT_ID, VM_BOX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDMessagesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDMessagesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDMessagesGet(xAuthToken, ACCOUNT_ID, VM_BOX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDMessagesPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDMessagesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Vmboxes vmboxes = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDMessagesPost(vmboxes, xAuthToken, ACCOUNT_ID, VM_BOX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDMessagesPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDMessagesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Vmboxes vmboxes = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDMessagesPut(vmboxes, xAuthToken, ACCOUNT_ID, VM_BOX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDMessagesRawPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDMessagesRawPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Vmboxes vmboxes = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDMessagesRawPost(vmboxes, xAuthToken, ACCOUNT_ID, VM_BOX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //string VM_MSG_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDDelete(xAuthToken, ACCOUNT_ID, VM_BOX_ID, VM_MSG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //string VM_MSG_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDGet(xAuthToken, ACCOUNT_ID, VM_BOX_ID, VM_MSG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Vmboxes vmboxes = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //string VM_MSG_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDPost(vmboxes, xAuthToken, ACCOUNT_ID, VM_BOX_ID, VM_MSG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDRawGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDRawGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //string VM_MSG_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDRawGet(xAuthToken, ACCOUNT_ID, VM_BOX_ID, VM_MSG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDRawPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDRawPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Vmboxes vmboxes = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //string VM_MSG_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDMessagesVMMSGIDRawPut(vmboxes, xAuthToken, ACCOUNT_ID, VM_BOX_ID, VM_MSG_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDPatch(xAuthToken, ACCOUNT_ID, VM_BOX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDVmboxesVMBOXIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDVmboxesVMBOXIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Vmboxes vmboxes = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string VM_BOX_ID = null;
            //instance.AccountsACCOUNTIDVmboxesVMBOXIDPost(vmboxes, xAuthToken, ACCOUNT_ID, VM_BOX_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWebhooksAttemptsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWebhooksAttemptsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWebhooksAttemptsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWebhooksGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWebhooksGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWebhooksGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWebhooksPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWebhooksPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWebhooksPatch(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWebhooksPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWebhooksPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Webhooks webhooks = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWebhooksPut(webhooks, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWebhooksSamplesGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWebhooksSamplesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWebhooksSamplesGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWebhooksSamplesSAMPLEIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWebhooksSamplesSAMPLEIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string SAMPLE_ID = null;
            //instance.AccountsACCOUNTIDWebhooksSamplesSAMPLEIDGet(xAuthToken, ACCOUNT_ID, SAMPLE_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWebhooksWEBHOOKIDAttemptsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWebhooksWEBHOOKIDAttemptsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string WEBHOOK_ID = null;
            //instance.AccountsACCOUNTIDWebhooksWEBHOOKIDAttemptsGet(xAuthToken, ACCOUNT_ID, WEBHOOK_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWebhooksWEBHOOKIDDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWebhooksWEBHOOKIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string WEBHOOK_ID = null;
            //instance.AccountsACCOUNTIDWebhooksWEBHOOKIDDelete(xAuthToken, ACCOUNT_ID, WEBHOOK_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWebhooksWEBHOOKIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWebhooksWEBHOOKIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string WEBHOOK_ID = null;
            //instance.AccountsACCOUNTIDWebhooksWEBHOOKIDGet(xAuthToken, ACCOUNT_ID, WEBHOOK_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWebhooksWEBHOOKIDPatch
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWebhooksWEBHOOKIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string WEBHOOK_ID = null;
            //instance.AccountsACCOUNTIDWebhooksWEBHOOKIDPatch(xAuthToken, ACCOUNT_ID, WEBHOOK_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWebhooksWEBHOOKIDPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWebhooksWEBHOOKIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Webhooks webhooks = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string WEBHOOK_ID = null;
            //instance.AccountsACCOUNTIDWebhooksWEBHOOKIDPost(webhooks, xAuthToken, ACCOUNT_ID, WEBHOOK_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWebsocketsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWebsocketsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWebsocketsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWebsocketsSOCKETIDGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWebsocketsSOCKETIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string SOCKET_ID = null;
            //instance.AccountsACCOUNTIDWebsocketsSOCKETIDGet(xAuthToken, ACCOUNT_ID, SOCKET_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelDelete
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWhitelabelDelete(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelDomainsGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelDomainsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWhitelabelDomainsGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelDomainsPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelDomainsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Whitelabel whitelabel = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWhitelabelDomainsPost(whitelabel, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWhitelabelGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelIconGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelIconGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWhitelabelIconGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelIconPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelIconPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Whitelabel whitelabel = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWhitelabelIconPost(whitelabel, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelLogoGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelLogoGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWhitelabelLogoGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelLogoPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelLogoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Whitelabel whitelabel = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWhitelabelLogoPost(whitelabel, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelPost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Whitelabel whitelabel = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWhitelabelPost(whitelabel, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelPut
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Whitelabel whitelabel = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWhitelabelPut(whitelabel, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelWHITELABELDOMAINGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelWHITELABELDOMAINGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string WHITELABEL_DOMAIN = null;
            //instance.AccountsACCOUNTIDWhitelabelWHITELABELDOMAINGet(xAuthToken, ACCOUNT_ID, WHITELABEL_DOMAIN);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelWHITELABELDOMAINIconGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelWHITELABELDOMAINIconGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string WHITELABEL_DOMAIN = null;
            //instance.AccountsACCOUNTIDWhitelabelWHITELABELDOMAINIconGet(xAuthToken, ACCOUNT_ID, WHITELABEL_DOMAIN);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelWHITELABELDOMAINLogoGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelWHITELABELDOMAINLogoGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string WHITELABEL_DOMAIN = null;
            //instance.AccountsACCOUNTIDWhitelabelWHITELABELDOMAINLogoGet(xAuthToken, ACCOUNT_ID, WHITELABEL_DOMAIN);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelWHITELABELDOMAINWelcomeGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelWHITELABELDOMAINWelcomeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //string WHITELABEL_DOMAIN = null;
            //instance.AccountsACCOUNTIDWhitelabelWHITELABELDOMAINWelcomeGet(xAuthToken, ACCOUNT_ID, WHITELABEL_DOMAIN);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelWelcomeGet
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelWelcomeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWhitelabelWelcomeGet(xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsACCOUNTIDWhitelabelWelcomePost
        /// </summary>
        [Test]
        public void AccountsACCOUNTIDWhitelabelWelcomePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Whitelabel whitelabel = null;
            //string xAuthToken = null;
            //string ACCOUNT_ID = null;
            //instance.AccountsACCOUNTIDWhitelabelWelcomePost(whitelabel, xAuthToken, ACCOUNT_ID);
            
        }
        
        /// <summary>
        /// Test AccountsPut
        /// </summary>
        [Test]
        public void AccountsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Accounts accounts = null;
            //instance.AccountsPut(accounts);
            
        }
        
        /// <summary>
        /// Test ApiAuthPut
        /// </summary>
        [Test]
        public void ApiAuthPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiAuth apiAuth = null;
            //instance.ApiAuthPut(apiAuth);
            
        }
        
        /// <summary>
        /// Test AuthAppsAPPIDDelete
        /// </summary>
        [Test]
        public void AuthAppsAPPIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string APP_ID = null;
            //instance.AuthAppsAPPIDDelete(APP_ID);
            
        }
        
        /// <summary>
        /// Test AuthAppsAPPIDGet
        /// </summary>
        [Test]
        public void AuthAppsAPPIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string APP_ID = null;
            //instance.AuthAppsAPPIDGet(APP_ID);
            
        }
        
        /// <summary>
        /// Test AuthAppsAPPIDPost
        /// </summary>
        [Test]
        public void AuthAppsAPPIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string APP_ID = null;
            //instance.AuthAppsAPPIDPost(APP_ID);
            
        }
        
        /// <summary>
        /// Test AuthAppsGet
        /// </summary>
        [Test]
        public void AuthAppsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AuthAppsGet();
            
        }
        
        /// <summary>
        /// Test AuthAuthorizePut
        /// </summary>
        [Test]
        public void AuthAuthorizePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AuthAuthorizePut();
            
        }
        
        /// <summary>
        /// Test AuthCallbackPut
        /// </summary>
        [Test]
        public void AuthCallbackPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AuthCallbackPut();
            
        }
        
        /// <summary>
        /// Test AuthKeysGet
        /// </summary>
        [Test]
        public void AuthKeysGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AuthKeysGet();
            
        }
        
        /// <summary>
        /// Test AuthKeysKEYIDGet
        /// </summary>
        [Test]
        public void AuthKeysKEYIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string KEY_ID = null;
            //instance.AuthKeysKEYIDGet(KEY_ID);
            
        }
        
        /// <summary>
        /// Test AuthKeysKEYIDPut
        /// </summary>
        [Test]
        public void AuthKeysKEYIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string KEY_ID = null;
            //instance.AuthKeysKEYIDPut(KEY_ID);
            
        }
        
        /// <summary>
        /// Test AuthLinksGet
        /// </summary>
        [Test]
        public void AuthLinksGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AuthLinksGet();
            
        }
        
        /// <summary>
        /// Test AuthLinksLINKIDDelete
        /// </summary>
        [Test]
        public void AuthLinksLINKIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LINK_ID = null;
            //instance.AuthLinksLINKIDDelete(LINK_ID);
            
        }
        
        /// <summary>
        /// Test AuthLinksLINKIDGet
        /// </summary>
        [Test]
        public void AuthLinksLINKIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LINK_ID = null;
            //instance.AuthLinksLINKIDGet(LINK_ID);
            
        }
        
        /// <summary>
        /// Test AuthLinksLINKIDPut
        /// </summary>
        [Test]
        public void AuthLinksLINKIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string LINK_ID = null;
            //instance.AuthLinksLINKIDPut(LINK_ID);
            
        }
        
        /// <summary>
        /// Test AuthProvidersGet
        /// </summary>
        [Test]
        public void AuthProvidersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AuthProvidersGet();
            
        }
        
        /// <summary>
        /// Test AuthProvidersPROVIDERIDDelete
        /// </summary>
        [Test]
        public void AuthProvidersPROVIDERIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string PROVIDER_ID = null;
            //instance.AuthProvidersPROVIDERIDDelete(PROVIDER_ID);
            
        }
        
        /// <summary>
        /// Test AuthProvidersPROVIDERIDGet
        /// </summary>
        [Test]
        public void AuthProvidersPROVIDERIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string PROVIDER_ID = null;
            //instance.AuthProvidersPROVIDERIDGet(PROVIDER_ID);
            
        }
        
        /// <summary>
        /// Test AuthProvidersPROVIDERIDPost
        /// </summary>
        [Test]
        public void AuthProvidersPROVIDERIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string PROVIDER_ID = null;
            //instance.AuthProvidersPROVIDERIDPost(PROVIDER_ID);
            
        }
        
        /// <summary>
        /// Test AuthPut
        /// </summary>
        [Test]
        public void AuthPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AuthPut();
            
        }
        
        /// <summary>
        /// Test AuthTokeninfoGet
        /// </summary>
        [Test]
        public void AuthTokeninfoGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AuthTokeninfoGet();
            
        }
        
        /// <summary>
        /// Test AuthTokeninfoPost
        /// </summary>
        [Test]
        public void AuthTokeninfoPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.AuthTokeninfoPost();
            
        }
        
        /// <summary>
        /// Test IpAuthPut
        /// </summary>
        [Test]
        public void IpAuthPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.IpAuthPut();
            
        }
        
        /// <summary>
        /// Test RatesGet
        /// </summary>
        [Test]
        public void RatesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.RatesGet();
            
        }
        
        /// <summary>
        /// Test RatesNumberPHONENUMBERGet
        /// </summary>
        [Test]
        public void RatesNumberPHONENUMBERGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string PHONE_NUMBER = null;
            //instance.RatesNumberPHONENUMBERGet(PHONE_NUMBER);
            
        }
        
        /// <summary>
        /// Test RatesPut
        /// </summary>
        [Test]
        public void RatesPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Rates rates = null;
            //instance.RatesPut(rates);
            
        }
        
        /// <summary>
        /// Test RatesRATEIDDelete
        /// </summary>
        [Test]
        public void RatesRATEIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string RATE_ID = null;
            //instance.RatesRATEIDDelete(RATE_ID);
            
        }
        
        /// <summary>
        /// Test RatesRATEIDGet
        /// </summary>
        [Test]
        public void RatesRATEIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string RATE_ID = null;
            //instance.RatesRATEIDGet(RATE_ID);
            
        }
        
        /// <summary>
        /// Test RatesRATEIDPatch
        /// </summary>
        [Test]
        public void RatesRATEIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string RATE_ID = null;
            //instance.RatesRATEIDPatch(RATE_ID);
            
        }
        
        /// <summary>
        /// Test RatesRATEIDPost
        /// </summary>
        [Test]
        public void RatesRATEIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Rates rates = null;
            //string RATE_ID = null;
            //instance.RatesRATEIDPost(rates, RATE_ID);
            
        }
        
        /// <summary>
        /// Test RatesRatedecksGet
        /// </summary>
        [Test]
        public void RatesRatedecksGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.RatesRatedecksGet();
            
        }
        
        /// <summary>
        /// Test SchemasGet
        /// </summary>
        [Test]
        public void SchemasGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.SchemasGet();
            
        }
        
        /// <summary>
        /// Test SchemasSCHEMANAMEGet
        /// </summary>
        [Test]
        public void SchemasSCHEMANAMEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string SCHEMA_NAME = null;
            //instance.SchemasSCHEMANAMEGet(SCHEMA_NAME);
            
        }
        
        /// <summary>
        /// Test SchemasSCHEMANAMEValidationPut
        /// </summary>
        [Test]
        public void SchemasSCHEMANAMEValidationPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string SCHEMA_NAME = null;
            //instance.SchemasSCHEMANAMEValidationPut(SCHEMA_NAME);
            
        }
        
        /// <summary>
        /// Test SharedAuthGet
        /// </summary>
        [Test]
        public void SharedAuthGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.SharedAuthGet();
            
        }
        
        /// <summary>
        /// Test SharedAuthPut
        /// </summary>
        [Test]
        public void SharedAuthPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SharedAuth sharedAuth = null;
            //instance.SharedAuthPut(sharedAuth);
            
        }
        
        /// <summary>
        /// Test SupMODULEFUNCTIONARGSGet
        /// </summary>
        [Test]
        public void SupMODULEFUNCTIONARGSGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string MODULE = null;
            //string FUNCTION = null;
            //string ARGS = null;
            //instance.SupMODULEFUNCTIONARGSGet(MODULE, FUNCTION, ARGS);
            
        }
        
        /// <summary>
        /// Test SupMODULEFUNCTIONGet
        /// </summary>
        [Test]
        public void SupMODULEFUNCTIONGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string MODULE = null;
            //string FUNCTION = null;
            //instance.SupMODULEFUNCTIONGet(MODULE, FUNCTION);
            
        }
        
        /// <summary>
        /// Test SupMODULEGet
        /// </summary>
        [Test]
        public void SupMODULEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string MODULE = null;
            //instance.SupMODULEGet(MODULE);
            
        }
        
        /// <summary>
        /// Test SystemConfigsGet
        /// </summary>
        [Test]
        public void SystemConfigsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.SystemConfigsGet();
            
        }
        
        /// <summary>
        /// Test SystemConfigsSYSTEMCONFIGIDDelete
        /// </summary>
        [Test]
        public void SystemConfigsSYSTEMCONFIGIDDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string SYSTEM_CONFIG_ID = null;
            //instance.SystemConfigsSYSTEMCONFIGIDDelete(SYSTEM_CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test SystemConfigsSYSTEMCONFIGIDGet
        /// </summary>
        [Test]
        public void SystemConfigsSYSTEMCONFIGIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string SYSTEM_CONFIG_ID = null;
            //instance.SystemConfigsSYSTEMCONFIGIDGet(SYSTEM_CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test SystemConfigsSYSTEMCONFIGIDNODEDelete
        /// </summary>
        [Test]
        public void SystemConfigsSYSTEMCONFIGIDNODEDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string SYSTEM_CONFIG_ID = null;
            //string NODE = null;
            //instance.SystemConfigsSYSTEMCONFIGIDNODEDelete(SYSTEM_CONFIG_ID, NODE);
            
        }
        
        /// <summary>
        /// Test SystemConfigsSYSTEMCONFIGIDNODEGet
        /// </summary>
        [Test]
        public void SystemConfigsSYSTEMCONFIGIDNODEGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string SYSTEM_CONFIG_ID = null;
            //string NODE = null;
            //instance.SystemConfigsSYSTEMCONFIGIDNODEGet(SYSTEM_CONFIG_ID, NODE);
            
        }
        
        /// <summary>
        /// Test SystemConfigsSYSTEMCONFIGIDNODEPatch
        /// </summary>
        [Test]
        public void SystemConfigsSYSTEMCONFIGIDNODEPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string SYSTEM_CONFIG_ID = null;
            //string NODE = null;
            //instance.SystemConfigsSYSTEMCONFIGIDNODEPatch(SYSTEM_CONFIG_ID, NODE);
            
        }
        
        /// <summary>
        /// Test SystemConfigsSYSTEMCONFIGIDNODEPost
        /// </summary>
        [Test]
        public void SystemConfigsSYSTEMCONFIGIDNODEPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemConfigs systemConfigs = null;
            //string SYSTEM_CONFIG_ID = null;
            //string NODE = null;
            //instance.SystemConfigsSYSTEMCONFIGIDNODEPost(systemConfigs, SYSTEM_CONFIG_ID, NODE);
            
        }
        
        /// <summary>
        /// Test SystemConfigsSYSTEMCONFIGIDPatch
        /// </summary>
        [Test]
        public void SystemConfigsSYSTEMCONFIGIDPatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string SYSTEM_CONFIG_ID = null;
            //instance.SystemConfigsSYSTEMCONFIGIDPatch(SYSTEM_CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test SystemConfigsSYSTEMCONFIGIDPost
        /// </summary>
        [Test]
        public void SystemConfigsSYSTEMCONFIGIDPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemConfigs systemConfigs = null;
            //string SYSTEM_CONFIG_ID = null;
            //instance.SystemConfigsSYSTEMCONFIGIDPost(systemConfigs, SYSTEM_CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test SystemConfigsSYSTEMCONFIGIDPut
        /// </summary>
        [Test]
        public void SystemConfigsSYSTEMCONFIGIDPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SystemConfigs systemConfigs = null;
            //string SYSTEM_CONFIG_ID = null;
            //instance.SystemConfigsSYSTEMCONFIGIDPut(systemConfigs, SYSTEM_CONFIG_ID);
            
        }
        
        /// <summary>
        /// Test SystemStatusGet
        /// </summary>
        [Test]
        public void SystemStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.SystemStatusGet();
            
        }
        
        /// <summary>
        /// Test TemplatesGet
        /// </summary>
        [Test]
        public void TemplatesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.TemplatesGet();
            
        }
        
        /// <summary>
        /// Test TemplatesTEMPLATENAMEDelete
        /// </summary>
        [Test]
        public void TemplatesTEMPLATENAMEDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string TEMPLATE_NAME = null;
            //instance.TemplatesTEMPLATENAMEDelete(TEMPLATE_NAME);
            
        }
        
        /// <summary>
        /// Test TemplatesTEMPLATENAMEPut
        /// </summary>
        [Test]
        public void TemplatesTEMPLATENAMEPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string TEMPLATE_NAME = null;
            //instance.TemplatesTEMPLATENAMEPut(TEMPLATE_NAME);
            
        }
        
        /// <summary>
        /// Test TokenAuthDelete
        /// </summary>
        [Test]
        public void TokenAuthDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.TokenAuthDelete();
            
        }
        
        /// <summary>
        /// Test TokenAuthGet
        /// </summary>
        [Test]
        public void TokenAuthGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.TokenAuthGet();
            
        }
        
        /// <summary>
        /// Test UbiquitiAuthPut
        /// </summary>
        [Test]
        public void UbiquitiAuthPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UbiquitiAuth ubiquitiAuth = null;
            //instance.UbiquitiAuthPut(ubiquitiAuth);
            
        }
        
        /// <summary>
        /// Test UserAuthAUTHTOKENGet
        /// </summary>
        [Test]
        public void UserAuthAUTHTOKENGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string AUTH_TOKEN = null;
            //instance.UserAuthAUTHTOKENGet(AUTH_TOKEN);
            
        }
        
        /// <summary>
        /// Test UserAuthPut
        /// </summary>
        [Test]
        public void UserAuthPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserAuth userAuth = null;
            //instance.UserAuthPut(userAuth);
            
        }
        
        /// <summary>
        /// Test UserAuthRecoveryPost
        /// </summary>
        [Test]
        public void UserAuthRecoveryPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserAuth userAuth = null;
            //instance.UserAuthRecoveryPost(userAuth);
            
        }
        
        /// <summary>
        /// Test UserAuthRecoveryPut
        /// </summary>
        [Test]
        public void UserAuthRecoveryPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserAuth userAuth = null;
            //instance.UserAuthRecoveryPut(userAuth);
            
        }
        
    }

}
